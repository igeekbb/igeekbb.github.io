[{"title":"hexo-theme-stellar 更新后阅读标签展示","path":"/2024/05/23/stellar-129/","content":"Hexo 主题 hexo-theme-stellar 更新到 V1.29 了,其中添加的阅读标签真好看. 单影只人见字如面。见字如面。心是一座孤岛，即便岛上繁花似锦，四季更替，依然只是一个人的风景。繁华也好，萧条也好，都只属于一个人。记得有人说过这样一句话：一人花开，一人花落，这些年从头到尾，无人问询。那种寥落，如轩窗外的一片月色，独自在树梢起舞，却无人欣赏它清丽的舞姿。又像是一阙小词，笔笔皆清冷，笔笔皆寂寥。抓到一名同学欢迎留言哦！好的，一定会的！且听风吟2023.09.08留言 滕王阁序豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。且听风吟2023.09.08留言 游山西村陆游莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。2023.09.08诗词节选 汉江临泛王维楚塞三湘接，荆门九派通。江流天地外，山色有无中。郡邑浮前浦，波澜动远空。襄阳好风日，留醉与山翁。2024.06.07诗词节选 YouthYouth is not a time of life; it is a state of mind; it is not a matter of rosy cheeks, red lips and supple knees; it is a matter of the will, a quality of the imagination, a vigor of the emotions; it is the freshness of the deep springs of life.Youth means a temperamental predominance of courage over timidity, of the appetite for adventure over the love of ease. This often exists in a man of 60 more than a boy of 20. Nobody grows old merely by a number of years. We grow old by deserting our ideals.Years may wrinkle the skin, but to give up enthusiasm wrinkles the soul. Worry, fear, self-distrust bows the heart and turns the spirit back to dust.Whether 60 or 16, there is in every human being’s heart the lure of wonders, the unfailing appetite for what’s next and the joy of the game of living. In the center of your heart and my heart, there is a wireless station; so long as it receives messages of beauty, hope, courage and power from man and from the infinite, so long as you are young.When your aerials are down, and your spirit is covered with snows of cynicism and the ice of pessimism, then you’ve grown old, even at 20; but as long as your aerials are up, to catch waves of optimism, there’s hope you may die young at 80.且听风吟2023.12.27英文测试"},{"title":"垃圾佬新欢 CC150 简单跑分评测","path":"/2024/05/16/cc150/","content":"购入 入手一款最近比较火的 CPU intel-CC150,正如我 Twitter 所说,这玩意妥妥洋垃圾,搜索到20年出来过一次,当时对飙9900,要价2000+,感觉疯逼了.最近不知道从那个渠道流出,正好差一块8&#x2F;9代 CPU,好就好在这块 CC150 居然是正式版,并非魔改和测试版.对于黑苹果来说,减少折腾就是王道,330麻利入手(现在还涨价了). 跑分 Windows CPU-ZCPU-Z i5-8500 VS CC150 CPU-Z 跑分 既然对标 i9-9900KF 青春版,我就以它为基准. CPU-Z HWiNFO64 黑果跑分Geekbench6 单核 Geekbench6 多核 Geekbench6 单核&#x2F;多核 Cinebench 数框框 结论 虽说大船靠岸,滞销不滞销全靠奸商吹.我的理想价位应该在220-280元以内,330买到本来就是亏的心态,谁曾想现在要破400趋势.总结一句话: 8500&amp;9600FK 及以下 CPU,在不加钱的情况下,可以一换一,性能有提升感知.如果是以上就不太推荐折腾了.","tags":["硬件","DIY"],"categories":["技术"]},{"title":"数码荔枝正版 Geek 精选软件推荐","path":"/2024/04/29/lizhi/","content":"精选自用软件 更多 MAC 软件👇🏻 更多 WIN 软件👇🏻","tags":["正版","软件"],"categories":["技术"]},{"title":"$35/年 搬瓦工DC9传家宝 融合怪脚本跑分","path":"/2024/04/16/bandwagong-dc9/","content":"The DC9 Plan VPS 配置信息硬盘：15 GB SSD内存：768 MBCPU：1 核流量：750 GB&#x2F;月带宽：1.5Gbps其实我更喜欢低延迟 图片版文字版123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169测评频道: https://t.me/vps_reviews 版本：2024.03.26更新日志：VPS融合怪测试(集百家之长) ---------------------基础信息查询--感谢所有开源项目--------------------- CPU 型号 : QEMU Virtual CPU version (cpu64-rhel6) CPU 核心数 : 1 CPU 频率 : 2599.998 MHz CPU 缓存 : L1: 32.00 KB / L2: 4.00 MB / L3: 16.00 MB 硬盘空间 : 945.89 MiB / 14240.99 MiB 启动盘路径 : /dev/sda1 内存 : 195.48 MiB / 736.76 MiB Swap : 0 KiB / 783.00 MiB 系统在线时间 : 0 days, 0 hour 38 min 负载 : 0.47, 0.13, 0.04 系统 : Debian GNU/Linux 12 (bookworm) (x86_64) AES-NI指令集 : ✔ Enabled VM-x/AMD-V支持 : ❌ Disabled 架构 : x86_64 (64 Bit) 内核 : 6.7.9-bbrplus TCP加速方式 : bbrplus 虚拟化架构 : KVM NAT类型 : Full Cone IPV4 ASN : AS25820 IT7 Networks Inc IPV4 位置 : Los Angeles / California / US----------------------CPU测试--通过sysbench测试------------------------- -&gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec) 1 线程测试(单核)得分: 544 Scores---------------------内存测试--感谢lemonbench开源----------------------- -&gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec) 单线程读测试: 10089.90 MB/s 单线程写测试: 10426.02 MB/s------------------磁盘dd读写测试--感谢lemonbench开源-------------------- -&gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode) 测试操作 写速度 读速度 100MB-4K Block 8.6 MB/s (2095 IOPS, 12.22s) 10.2 MB/s (2478 IOPS, 10.33s) 1GB-1M Block 346 MB/s (330 IOPS, 3.03s) 661 MB/s (630 IOPS, 1.59s)---------------------磁盘fio读写测试--感谢yabs开源----------------------Block Size | 4k (IOPS) | 64k (IOPS) ------ | --- ---- | ---- ---- Read | 30.32 MB/s (7.5k) | 283.22 MB/s (4.4k)Write | 30.34 MB/s (7.5k) | 284.71 MB/s (4.4k)Total | 60.67 MB/s (15.1k) | 567.94 MB/s (8.8k) | | Block Size | 512k (IOPS) | 1m (IOPS) ------ | --- ---- | ---- ---- Read | 525.43 MB/s (1.0k) | 761.56 MB/s (743)Write | 553.34 MB/s (1.0k) | 812.28 MB/s (793)Total | 1.07 GB/s (2.1k) | 1.57 GB/s (1.5k)---------------------流媒体解锁--感谢sjlleo开源-------------------------以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用----------------Youtube----------------[IPv4]连接方式: Youtube Video Server视频缓存节点地域: 美国 洛杉机(LAX17S56)Youtube识别地域: 无信息(null)----------------Netflix----------------[IPv4]您的出口IP可以使用Netflix，但仅可看Netflix自制剧NF所识别的IP地域信息：美国[IPv6]您的网络可能没有正常配置IPv6，或者没有IPv6网络接入---------------DisneyPlus---------------[IPv4]当前IPv4出口解锁DisneyPlus区域：美国区解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断----------------流媒体解锁--感谢RegionRestrictionCheck开源-------------- 以下为IPV4网络测试，若无IPV4网络则无输出============[ Multination ]============ Dazn: Yes (Region: US) HotStar: No Disney+: No Netflix: Originals Only YouTube Premium: Yes Amazon Prime Video: Yes (Region: US) TVBAnywhere+: Yes iQyi Oversea Region: US Viu.com: No YouTube CDN: Los Angeles, CA Netflix Preferred CDN: Los Angeles, CA Spotify Registration: Yes (Region: US) Steam Currency: USD ChatGPT: Only Available with Web Browser Bing Region: US Instagram Licensed Audio: -&gt; Instagram Licensed Audio: Yes======================================= 以下为IPV6网络测试，若无IPV6网络则无输出---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR-------------- Tiktok Region: 【US】-------------------欺诈分数以及IP质量检测--本脚本原创-------------------数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对以下为各数据库编号，输出结果后将自带数据库来源对应的编号ipinfo数据库 ① | scamalytics数据库 ② | virustotal数据库 ③ | abuseipdb数据库 ④ | ip2location数据库 ⑤ip-api数据库 ⑥ | ipwhois数据库 ⑦ | ipregistry数据库 ⑧ | ipdata数据库 ⑨ | ipgeolocation数据库 ⑩ipapiis数据库 ⑪ | ipapicom数据库 ⑫ | abstractapi数据库 ⑬ | ipqualityscore数据库 ⑭ 欺诈分数(越低越好): 0⑤ abuse得分(越低越好): 0⑤ 0.0026 (Low)⑪ 威胁等级: low② IP类型: 使用类型(usage_type):hosting① Data Center/Web Hosting/Transit⑤ hosting⑧ hosting⑨ hosting⑪ 公司类型(company_type):hosting① business⑧ business⑪ 云服务提供商(cloud_provider): Yes⑧ 数据中心(datacenter): Yes⑥ ⑨ ⑪ 移动网络(mobile): No⑥ ⑪ 代理(proxy): No① ② Yes⑥ ⑦ ⑧ ⑨ ⑪ ⑫ VPN(vpn): No① ② Yes⑦ ⑧ ⑪ TOR(tor): No① ② ⑦ ⑧ ⑨ ⑪ ⑫ TOR出口(tor_exit): No⑧ 搜索引擎机器人(search_engine_robot):② 匿名代理(anonymous): Yes⑦ ⑧ No⑨ 攻击方(attacker): No⑧ ⑨ 滥用者(abuser): No⑧ ⑨ ⑪ 威胁(threat): No⑧ ⑨ iCloud中继(icloud_relay): No① ⑧ ⑨ 未分配IP(bogon): No⑧ ⑨ ⑪ Google搜索可行性：YES----------------三网回程--感谢zhanghanyun/backtrace开源-----------------国家: US 城市: Los Angeles 服务商: AS25820 IT7 Networks Inc北京电信 219.141.136.12 电信CN2 [优质线路] 北京联通 202.106.50.1 电信CN2 [优质线路] 北京移动 221.179.155.161 电信CN2 [优质线路] 上海电信 202.96.209.133 电信CN2 [优质线路] 上海联通 210.22.97.1 电信CN2 [优质线路] 上海移动 211.136.112.200 电信CN2 [优质线路] 广州电信 58.60.188.222 电信CN2 [优质线路] 广州联通 210.21.196.6 电信CN2 [优质线路] 广州移动 120.196.165.24 电信CN2 [优质线路] 成都电信 61.139.2.69 电信CN2 [优质线路] 成都联通 119.6.6.6 电信CN2 [优质线路] 成都移动 211.137.96.205 电信CN2 [优质线路] ---------------------回程路由--感谢fscarmen开源及PR---------------------依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉!广州电信 58.60.188.22213.48 ms * 局域网11.09 ms AS4134 美国, 加利福尼亚州, 洛杉矶, chinatelecom.com.cn, 电信144.92 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信159.59 ms * 中国, 广东, 深圳, chinatelecom.com.cn, 电信158.85 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信152.69 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信广州联通 210.21.196.6118.12 ms * 局域网0.72 ms AS4134 美国, 加利福尼亚州, 洛杉矶, chinatelecom.com.cn, 电信147.23 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信154.31 ms AS4837 中国, 广东, 广州, chinaunicom.com, 联通165.78 ms AS4837 中国, 广东, 广州, chinaunicom.com, 联通172.68 ms AS17816 中国, 广东, 广州, chinaunicom.com, 联通356.36 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通194.71 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通广州移动 120.196.165.2438.10 ms * 局域网0.85 ms AS4134 美国, 加利福尼亚州, 洛杉矶, chinatelecom.com.cn, 电信146.18 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信157.37 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信160.30 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信184.93 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动186.55 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动184.78 ms AS56040 中国, 广东, 深圳, chinamobile.com, 移动--------------------自动更新测速节点列表--本脚本原创--------------------位置 上传速度 下载速度 延迟 丢包率Speedtest.net 3149.66 Mbps 3318.04 Mbps 0.39 0.0%洛杉矶 777.06 Mbps 915.15 Mbps 1.19 0.0%日本东京 484.11 Mbps 1318.05 Mbps 125.18 0.4%联通上海5G 12.61 Mbps 13.44 Mbps 151.69 0.0%联通天津5G 1049.94 Mbps 219.76 Mbps 159.77 NULL电信Zhenjiang5G 539.77 Mbps 337.57 Mbps 145.52 NULL移动Beijing 870.76 Mbps 338.43 Mbps 166.92 NULL------------------------------------------------------------------------ 总共花费 : 7 分 53 秒 时间 : Tue Apr 16 02:23:36 EDT 2024------------------------------------------------------------------------","tags":["VPS"],"categories":["技术"]},{"title":"转译-10个 Prompts 助你重写内容","path":"/2024/04/08/Rewrite-Content-prompts/","content":"引言 How to Rewrite Content with ChatGPT (Ultimate Guide + 10 AI Prompts) 如何用 ChatGPT 重写内容终极指南，并提供了 10 个 AI 提示 本文用到的工具们月之暗面 moonshot 国产大模型 Kimi.通过 kimi-free-api 转为 API.在 Open WebUI 使用 宝玉翻译 Prompts .全文翻译采用’意译’,仅修改几处,感谢&nbsp;AI&nbsp;工具辛勤付出.所有对话保存在”How to Rewrite Content with ChatGPT.txt“,有兴趣可以自行查看.我认为一个好的&nbsp;Prompts&nbsp;可以一定程度弥补国产大模型的不足 正文 明确重写目标：思考为什么要重新编写这些内容。是为了把复杂的概念讲得简单明了，还是为了让过时的信息得到更新，抑或是为了让文章的语气更加贴切？设定一个清晰的目标，有助于指导整个改写过程。提炼核心观点：找出文章中那些关键信息和关键词，确保在改写后的版本中依然能够保留这些要点。这样一来，即便文章的表现形式发生了变化，内容的核心依然能得到保留。考虑目标读者：了解你的目标读者是谁，这有助于你选择合适的语言风格和难易程度。在改写时，这一点非常重要，需要时刻牢记。审视文章的语调和风格：判断现有的语调和风格是否符合品牌形象和读者的需求，必要时进行适当的调整。搜集相关资料：收集更多的数据、研究成果或有趣的案例故事，这些都能让内容更加充实，同时提升文章的价值。设计新版本的结构：对改写后的内容进行结构设计。考虑是否需要调整部分内容的顺序、合并某些段落，或者增加新的标题，以便提高文章的可读性和逻辑性。 10 个 ChatGPT 提示帮您重写内容 1.通俗易懂地解释复杂信息ChatGPT&nbsp;Prompts 你是一个内容易懂化的专家。你的工作是把那些“&lt;复杂信息&gt;”转换成大多数人都能轻松理解的形式。把专业术语、行业黑话和难以把握的概念用简单的话语和贴近生活的比喻来表达。在保持原有信息精髓和准确度的同时，让内容变得有趣而且容易消化。用短句、列表和图表、图片等形式（如果合适的话）来帮助阐明观点。目标是向那些对该领域不太熟悉的读者传授知识，提供信息。 ChatGPT&nbsp;Response: 2.让表达更清晰、更简洁ChatGPT&nbsp;Prompts 你是一个让文章变得清晰易懂的高手。你的工作是让提供的“&lt;文本内容&gt;”变得更加明了和简洁。去掉那些多余的废话、晦涩难懂的词汇和令人费解的被动句式。关注于强化文章的结构和流畅度，让每句话都能直截了当地传达信息。在减少字数、提高阅读体验的同时，保持原文的核心意图和重要信息。用积极的句子结构、准确的词汇来表达，让文章中的观点转换自然流畅，使阅读变得更加有趣和直接。 ChatGPT&nbsp;Response: 3.将非正式文本转化为正式用语ChatGPT&nbsp;Prompts 你是一位专业的文本润色师。你的工作是把那些“&lt;非正式文本&gt;”改写成正式和适合专业场合的版本。把那些口语化、非正式的表达换成它们的正式版本。确保整个文本的语气保持尊重和专注，并且适合专业读者阅读。写句子要完整，语法要正确，格式要有条理。在提升文本语言水平，符合正式写作要求的同时，还要确保原文的意思和目的不变。根据情况添加适当的问候语和结束语，确保文本符合你所在环境的正式交流规范。 ChatGPT&nbsp;Response: 4.突出核心要点ChatGPT&nbsp;Prompts 你是一个内容优化专家。你的工作是调整提供的“&lt;文本&gt;”，让其核心要点更加醒目。可以通过加粗或斜体（根据你的指导选择一种）来强调重要观点，用列表或编号来列举关键要素，以及用简短有力的语句来凸显主要信息。可以用标题或副标题来整理内容，帮助读者聚焦于最关键的信息。保持文章的连贯性，让对要点的强调帮助读者更好地理解和记住文章的核心内容。 ChatGPT&nbsp;Response: 5.为特定受众量身定制内容ChatGPT&nbsp;Prompts 你是一位专注于读者体验的撰稿人。你的工作是根据特定的“&lt;目标读者&gt;”来调整“&lt;原始内容&gt;”，让内容与他们产生共鸣。深入了解他们的喜好、表达方式、文化特点和关注点，以便内容更加贴近他们的生活。根据读者的理解力和期望，适当调整措辞、案例、引用和词汇。引入读者易于理解和感同身受的故事、比喻或类比。在让内容更加吸引目标读者并易于理解的同时，确保信息的核心和事实的准确无误。 ChatGPT&nbsp;Response: 6.为 SEO 优化文本ChatGPT&nbsp;Prompts 你是一位专业的 SEO 文案师。你的职责是调整“&lt;原始文本&gt;”，以提高其在搜索引擎中的排名，同时确保内容对读者来说依然易读且引人入胜。巧妙地在全文中布局“&lt;关键词&gt;”，保持文章的流畅和逻辑性。让关键词的运用看起来自然而然，并为内容增值。运用SEO技巧，比如设置有描述性的标题和副标题、简短的段落和清晰的项目列表，来增强文章的可读性。精心设计标题和元描述，嵌入关键词，提升从搜索结果页的点击率。内容要保持信息丰富、价值显著，并满足用户的搜索需求，以此提高用户的参与度，减少访问退出率。 ChatGPT&nbsp;Response: 7.增加新的观点和角度ChatGPT&nbsp;Prompts 你是一位擅长拓展思维的内容编辑。你的工作是给“&lt;现有内容&gt;”带来全新的、多样化的视角，这些视角之前可能未曾被探讨过。从各个领域、不同文化背景或多元思想中提取有价值的洞见、实例或数据，以此来丰富文章内容，并帮助读者更全面地理解讨论的主题。对已有的观点提出质疑，激发读者对话题进行深入的批判性思考。通过提出问题、构建假设性场景或进行对比分析，激发读者的思考和讨论。确保这些新加入的内容能够与原文相得益彰，增强而非削弱原有的信息，共同构建一个内容更为丰富、引人深思的文章。 ChatGPT&nbsp;Response: 8.调整内容结构ChatGPT&nbsp;Prompts 你是一位内容调整专家。你的任务是对现有的“&lt;内容&gt;”进行重新布局。首先要把握原文的核心信息和要点，然后以创新的方式重新组合这些要素，用一种新的方式呈现信息，使得内容更加清晰、引人入胜、具有冲击力。确保修改后的内容忠实于原文的意图和事实基础，同时带来新的视角或流畅性。可以尝试从结论讲起、换个叙述角度或调整论述顺序等方法来刷新内容。确保调整后的语气和风格仍然适合目标读者和内容的目标。 ChatGPT&nbsp;Response: 9.塑造品牌语言风格ChatGPT&nbsp;Prompts 你是一位品牌语言风格的塑造者。你的工作是调整现有的“&lt;内容&gt;”，使其符合品牌的特定“&lt;声音特点&gt;”。通过内容展现品牌的独特性格、语气和风格，比如专业严谨、创新前沿、亲和友好或权威可信等。确保所使用的语言、短语和信息能够触动品牌的目标群体，体现出品牌的中心价值和使命。适时调整内容的正式度、行业术语的使用以及叙事手法，打造出既符合品牌调性又具有吸引力的文章。在内容改写过程中，始终保持原文的核心意图和主要信息，让内容成为品牌个性的自然展现。 ChatGPT&nbsp;Response: 10.让专业内容变得轻松亲切ChatGPT&nbsp;Prompts 你是一位擅长调整语言风格的编辑。你的任务是把“&lt;专业文本]&gt;”改写成更加轻松和容易接近的形式。运用日常对话的语言风格，比如使用缩略词、通俗说法，以及在适合的情况下采用第一人称的叙述方式。把复杂的术语和概念变得简单易懂，让没有专业背景的读者也能够理解。如果适合，加入幽默感或个人小故事，让内容更加接地气。保持原文的核心信息和主旨不变，但让语言变得更加随性，就像是在进行一场友好的对话，而不是正式的讲话。力求达到一种轻松的语调，适合用在博客文章、社交媒体动态或随意的交谈中。 ChatGPT&nbsp;Response: 结语 12运用ChatGPT优化内容创作总而言之，这份指导手册将向你展示如何借助 ChatGPT 的力量，让写作过程变得更加轻松有趣。","tags":["ChatGPT","Prompt"],"categories":["AI"]},{"title":"转译-7个必备的 ChatGPT Excel Prompts","path":"/2024/04/04/prompts-for-excel/","content":"引言 7 Essential ChatGPT Prompts for Excel 主要介绍了如何通过ChatGPT来简化和提高Excel操作的效率,帮助用户解决各种Excel任务。 本文用到的工具们月之暗面 moonshot 国产大模型 Kimi.通过 kimi-free-api 转为 API.在 Open WebUI 使用 宝玉翻译 Prompts .全文翻译采用’意译’,仅修改几处,感谢&nbsp;AI&nbsp;工具辛勤付出.所有对话保存在”chat-7个必备的 ChatGPT Excel 指令.txt“,有兴趣可以自行查看.我认为一个好的&nbsp;Prompts&nbsp;可以一定程度弥补国产大模型的不足 正文 1234在当今职场，熟练掌握 Excel 是极其重要的技能。就算是资深专家，也会偶尔遇到一些复杂的难题，影响他们的工作效率。如果我们告诉你，通过ChatGPT可以解决你所有的Excel问题，你会怎么想呢？我们将向你展示6个非常实用的 ChatGPT 技巧，它们能够有效地显著提高你的工作效率。同时，我们还会向你介绍如何让 ChatGPT 成为你处理 Excel 工作的有效工具。 7个必备的 ChatGPT Excel 指令 1.理解 Excel 函数ChatGPT&nbsp;Prompts 当你需要了解某个 Excel 函数是如何工作的时候，可以使用以下格式向 ChatGPT 提问： 请详细解释 Excel 中“&lt;函数名称&gt;”的工作原理，并且分步骤说明。 ChatGPT&nbsp;Response: 2.如何使用 Excel 函数ChatGPT&nbsp;Prompts 通过以下提问示例，我们将创建一个简洁的指南，帮助你掌握如何使用任何 Excel 函数： 如何利用Excel的“&lt;函数名称&gt;”来“&lt;实现特定目的&gt;”？请提供分步指导，跳过基础步骤。 例如，我们将通过一个实例来学习如何计算一组单元格的平均值。 ChatGPT&nbsp;Response: 3.创建 Excel 命令ChatGPT&nbsp;Prompts 有时，你可能需要快速创建一个 Excel 命令。幸运的是，ChatGPT 可以协助你完成这项任务。使用以下提示模板来请求任何 Excel 命令： 请编写一个用于完成“&lt;具体任务描述&gt;”的 Excel 命令。请直接给出代码。 只需清晰地描述你希望在Excel中完成的任务，ChatGPT便会为你提供相应的命令代码。 ChatGPT&nbsp;Response: 4.生成宏命令ChatGPT&nbsp;Prompts 对于热衷于Excel自动化功能的用户来说，宏是一个非常强大的工具值得深入了解。ChatGPT 为你提供支持，帮助你学习如何高效地创建和运用宏。 根据 Microsoft 的官方定义，宏是你能够进行多次重复执行的动作或一系列动作。创建宏基本上就是记录下你的鼠标操作和键盘输入，以此来实现任务的自动化。下面，我为你准备了一个提问示例，以便你在编写宏时得到帮助： 编写一个VBA Excel宏，用于“&lt;执行特定操作&gt;”,请直接提供代码。 我曾尝试编写一个基础宏，它的功能是从单元格中提取数值，并根据这个数值打开相应的工作表。 ChatGPT&nbsp;Response: 5.在 Excel 中执行复杂任务ChatGPT&nbsp;Prompts Excel 不仅仅是用来完成基本任务的；它还可以处理包括数据分析和图表创建在内的复杂工作。ChatGPT 帮助你完成这些困难任务,清晰地描述你想要做什么，包括每一个细节。 充当一个熟练的Excel助手,“&lt;阐述任务的具体内容&gt;” 我已经得到了如何执行每一步的指导，并且对每个步骤都有清晰的理解。 ChatGPT&nbsp;Response: 6.让 ChatGPT 成为 Excel 助手ChatGPT&nbsp;Prompts 在 Excel 中为每项任务设置单独的提示可能会让人感到繁琐。其实，你可以通过一个统一的提示，让 ChatGPT 成为你处理任何 Excel 任务的得力助手。 下面是一个能让 ChatGPT 像 Excel 专家那样提供帮助的通用提示： 作为一个 Excel 专家，为完成 Excel 中的特定任务提供详细的逐步指导。这可能包括创建数据透视表、数据格式化、运用公式或函数、绘制图表或图形，以及其他各种 Excel 相关任务。请对每一步进行详尽的解释，明确指出必要的配置或选择，阐释应使用的函数，并给出技巧和建议，以保证任务能够准确且高效地完成。请协助我完成以下任务：“&lt;具体描述你的任务&gt;” ChatGPT&nbsp;Response: 7.将 ChatGPT 变成一个 Excel 表格ChatGPT&nbsp;Prompts 实际上，你可以将 GPT 作为一个 Excel 表格的文本版来使用，它会根据你的指令进行数据转换或计算。 请作为一个基于文本的 Excel 表格与我互动。你只需以文本形式回复一个包含行号和列标（从A至L）的10行空白 Excel 表格。第一列应留空，用于标注行号。我会指示你哪些内容需要填入单元格，而你的回复应当仅为 Excel 表格的文本结果，无需其他内容。请避免提供解释性文字。如果需要进行计算，我会给出相应的公式，你执行后，请仅以文本形式回复计算后的 Excel 表格结果。首先，请给我一个空白的表格模板。 ChatGPT&nbsp;Response: 结语 123总的来说，ChatGPT 是一个非常实用的工具，能够有效协助你完成多种类型的 Excel 任务。并不像大家想象的那样，使用 ChatGPT 处理 Excel 不需要很多的提示；几个有效准备的提示就足以应对。通过今天向你介绍的七个 Excel 提示生成器，你现在已经具备了应对可能出现的不同 Excel 挑战的能力。","tags":["ChatGPT","Prompt"],"categories":["AI"]},{"title":"转译-15个适用于学术写作的 ChatGPT Prompts","path":"/2024/04/02/academicprompts/","content":"引言 15 ChatGPT Prompts for Academic Writing 这篇文章详细阐述了如何利用 ChatGPT 来增强学术写作的各个方面,帮助学术作者通过生成创意点子、结构化论证、克服写作障碍以及格式化引用来提升学术写作质量。我认为是一篇非常不错的 Prompts ,这 15 条 Prompts 都可以单独提取使用. 是一个很好的学习范例. 本文用到的工具们月之暗面 moonshot 国产大模型 Kimi.通过 kimi-free-api 转为 API.在 Open WebUI 使用 宝玉翻译 Prompts .全文翻译采用’意译’,仅修改几处,感谢&nbsp;AI&nbsp;工具辛勤付出.所有对话保存在”chat-学术写作的利器.txt“,有兴趣可以自行查看.我认为一个好的&nbsp;Prompts&nbsp;可以一定程度弥补国产大模型的不足 正文 1234567学术论文写作可能很困难。为了获得更好的结果，你必须研究新的想法并将它们转化为正式的写作。更不用说在事实核查、准确引用资料以及维持文章客观性方面所面临的压力了。不过，好消息是：ChatGPT 能成为你学术写作的得力助手。本文将介绍 15 个 ChatGPT 提示，助你一臂之力。借助这些提示，ChatGPT 不仅能帮你锁定出色的论文议题、构建论证结构，还能为你的文字增添独特风格。它同样能助你梳理思绪，将繁杂信息整合成条理清晰的论文。继续阅读，探索 ChatGPT 如何在撰写学术论文过程中助你一臂之力。 15 个 ChatGPT Prompts 助力学术写作 1. 优化论文陈述ChatGPT&nbsp;Prompts: 你是一位擅长学术写作的论文指导老师。你的职责是对学生的初始论文陈述进行优化，使其更加精炼和深入。学生给出的主题句为：“&lt;初始论文陈述&gt;” 你需要评估这个初始论文陈述在清晰度、具体性和学术严谨性方面的表现，并提出建议，帮助学生使陈述更加简洁、集中，并具有说服力。可以考虑加入明确的立场、关键的研究问题和研究可能带来的影响。确保优化后的主题句界限明确、具有争议性，并能为其论文中的有趣论证打下坚实的基础。 ChatGPT&nbsp;Response: 2. 深入剖析数据与研究成果ChatGPT&nbsp;Prompts: 在学术写作的过程中，扮演一位数据分析师。你需要对论文中“&lt;数据章节名称&gt;” 提供的数据进行深入分析。首先，概述主要的数据点和研究成果。寻找数据呈现的规律、联系或异常现象。分析这些成果是如何印证或对论文的主要论点提出质疑的。对数据采集方法进行评价，包括样本量、采集手段和可能的偏差等。最后，探讨这些成果对学术领域的贡献，并指出未来研究的方向。务必确保你的分析详尽、准确，并符合学术规范。 ChatGPT&nbsp;Response: 3. 策划学术研究主题ChatGPT&nbsp;Prompts: 在“&lt;研究领域&gt;”的学术写作项目中，你的角色是研究顾问。你的职责是发掘当前的研究趋势、尚未被充分探索的领域以及可能产生重大影响的新问题。思考如何采用跨学科的方法来拓展研究的视野。提出至少五个具有吸引力的研究主题，并为每个主题提供简短的背景说明、可能的研究问题以及预期对学术界的贡献。保证每个主题都是切实可行的、具有创新性，并且适合进行深入的学术探讨。 ChatGPT&nbsp;Response: 4. 设计研究议题ChatGPT&nbsp;Prompts: 你是一名研究咨询专家，你的任务是为关于“&lt;研究主题&gt;”的学术论文设计研究议题。首先，找出与该研究主题紧密相关的主要议题和子议题，这些都是值得深入探讨的领域。构建一系列清晰、集中且适合进行严谨学术研究的问题。每个问题都应该针对研究主题的某个具体方面，旨在揭示新的观点或对现有知识做出补充。这些问题需要是开放式的，能够引发分析和评价性的讨论，并在提问时就考虑到它们将如何引导你的研究方法。在设计问题时，思考研究结果可能带来的影响和应用。 ChatGPT&nbsp;Response: 5. 校对以提升论文质量ChatGPT&nbsp;Prompts: 你是一名擅长学术写作的校对专家。你要审阅并修改一篇名为“&lt;论文标题&gt;”的学术论文的部分内容。重点关注提高文本的清晰度、简洁性和连贯性。找出并修改那些可能造成理解困难、结构复杂或过于冗长的句子和表达，并提供更准确、简练的替换方案。留意论述的逻辑顺序，确保每个句子都能有效地支持论文的论点或叙述。保持全文在用词、风格和语气上的统一性。对于专业术语或技术词汇，确保它们对目标读者群体清晰易懂。校对结束时，确认所修改的部分遵循了学术规范，并有助于提升论文的整体阅读体验和影响力。 ChatGPT&nbsp;Response: 6. 协助文献综述ChatGPT&nbsp;Prompts: 你是一名学者，正在进行关于“&lt;研究主题&gt;”的学术论文的文献综述工作。你的工作是筛选、分析并整合来自不同来源的关键研究成果、理论框架和研究方法。首先，构建一个清晰的研究问题或主旨陈述，以界定你的回顾范围。查找并审阅相关的学术期刊文章、会议论文、专著以及权威的网络资源。对每一份资料进行评估，考量其可信度、与研究主题的相关性以及对学术领域的贡献。概括每份资料的主要论点、证据支撑和结论，并注意其中的规律、矛盾或研究空白。批判性地分析这些研究的方法论、它们的限制以及研究结果的意义。将文献回顾按照主题或时间顺序进行组织，确保构建一个围绕你的研究主题的连贯叙述。最后，强调你的研究将如何填补现有研究的空白或为该领域带来新的洞见。务必遵循你所在机构规定的特定引用格式和学术写作规范。 ChatGPT&nbsp;Response: 7. 设定研究假设ChatGPT&nbsp;Prompts: 你是一名在“&lt;研究领域&gt;”工作的学术研究者。你需要制定一个明确、简练的假设，用以解答该领域的一个具体研究问题。该假设应以相关的现有文献、理论或框架为基础。它应当是可检验的，可以通过实证研究或定性分析来进行验证，并且通过揭示研究领域的未知点或对现有观点提出挑战，为知识体系做出贡献。确保你的假设具体明确、可衡量、可达成、相关性强，并有明确的时间限制（即SMART原则）。简要阐述你的假设背后的逻辑，将其与该领域的核心概念、理论或先前的研究相对接。 ChatGPT&nbsp;Response: 8. 撰写引言ChatGPT&nbsp;Prompts: 你是一名学术研究者，负责为你的学术论文撰写引人入胜的开篇部分。你的任务是将“&lt;研究主题&gt;”放入广泛的学术对话中进行讨论，阐释研究的重要性，并明确提出你的研究问题或假设。首先，概述目前对“&lt;研究主题&gt;”的普遍理解以及文献中尚待填补的空白。然后，清楚地说明你的研究目标、研究动机以及它可能对学术界做出的贡献。确保引言能够吸引读者的注意，通过突出你的研究对于解决重要问题或增进“&lt;研究领域&gt;”知识的重要作用。最后，简要介绍你的研究方法，并预览论文的结构布局。 ChatGPT&nbsp;Response: 9. 制定研究提纲：ChatGPT&nbsp;Prompts: 作为学术研究者，你的任务是就“&lt;研究主题&gt;”撰写一篇学术文章。首先，进行深入的文献回顾，概括主要研究成果，并找出研究中的不足之处。针对这些不足提出明确的研究问题或假设。在方法论部分，详细描述你的研究方法，涵盖数据搜集和分析的具体步骤。系统且有序地展示你的研究成果，并以数据和理论为支撑。分析你的研究成果对学术领域的潜在影响，并对未来的研究方向提出建议。确保你的写作遵循学术规范，按照“&lt;指定的引用格式&gt;”正确引用和标注参考文献。最后，以对你研究成果及其对学术界贡献的有力概述作为结尾。 ChatGPT&nbsp;Response: 10. 撰写专业论文章节ChatGPT&nbsp;Prompts: 你是一名“&lt;你的领域&gt;”的学术研究者。你现在要为一篇合作撰写的论文贡献一个章节，专注于探讨“&lt;章节主题&gt;”。这个章节需要提供一个详尽的介绍，涵盖相关文献综述、最新研究成果以及你的独到见解和分析。确保你的写作内容清晰、简练，并且遵循你所在领域的学术规范，包括按照“&lt;指定引用格式&gt;”准确地引用文献。你的贡献应当与整篇论文的核心议题和目标完美融合，提升整篇论文的学术价值，并推动你研究领域的学术讨论。 ChatGPT&nbsp;Response: 11. 设计标题层级ChatGPT&nbsp;Prompts: 你是一名学术编辑，负责为“&lt;你的领域&gt;”的一篇研究论文设计标题和小标题的层级格式。你的任务是让文章的结构层次分明、条理清晰，以便读者轻松理解。首先，为不同级别的标题设定统一的格式，从大标题（如引言、方法、结果、讨论、结论）到各个部分下的小标题。按照“&lt;指定的写作风格指南&gt;”的要求，包括字体大小、样式和大写规则等。确保每个标题和小标题都简洁、具有描述性，并能准确概括其相应部分的内容。让标题层级与整篇文章的结构和逻辑流程相匹配，共同构建一个条理清晰、连贯有序的论文。 ChatGPT&nbsp;Response: 12. 优化论文观点衔接ChatGPT&nbsp;Prompts: 你是一名语言学专家，专注于提升“&lt;你的领域&gt;”学术论文的连贯性和阅读流畅性。你的工作是对论文草稿进行审阅，识别并强化那些需要更加流畅过渡的观点、段落或章节之间的连接。对于每个需要改进的地方，设计出自然而合理的过渡语句，确保文章内容能够顺畅地从一个点过渡到下一个。运用多样的衔接手段，比如使用转折词（例如，“与之相反”，“因此”）、主题衔接句和对前面论述的明确回溯（例如，“在先前讨论的&lt;概念&gt;基础上，我们进一步探讨…”）。确保每个过渡不仅能够连接不同的观点，还能帮助读者更好地理解论文的整体论述和结构。你的修改应当有助于构建一个连贯、引人入胜的论文叙述，让读者在理解研究的复杂性时感到清晰和有方向。 ChatGPT&nbsp;Response: 13. 校正文法和句式ChatGPT&nbsp;Prompts: 你是一名在“&lt;你的领域&gt;”具有深厚背景知识的细致校对专家。你的职责是细致检查一份学术论文，专注于修正语法错误和优化句式，确保达到学术写作的高标准。特别注意主语和谓语的一致性、时态的连贯性，以及学术性语气和词汇的恰当运用。在适当的地方，将被动语态改为主动语态，以增强语句的直接性和影响力。审阅复杂句子，确保文章内容清晰、连贯，必要时对复杂的句式结构进行拆解。依照“&lt;指定写作指南&gt;”的标点规则，特别是逗号、分号和冒号的使用，来提升文本的阅读体验。目标是打造出一份精雕细琢、无懈可击的文档，使思想的传达清晰、简洁、有效，同时不削弱论文的学术价值和贡献。 ChatGPT&nbsp;Response: 14. 编制和排版引用ChatGPT&nbsp;Prompts: 你是一名在“&lt;你的领域&gt;”学术界工作的细心引用编排专家。你的工作是为一篇学术论文收集、整理并排版引用资料。首先，搜集每个引用资料的必需信息，包括作者名称、著作名称、发表时间、具体页码以及书籍的出版社信息，或是期刊名称、卷期编号等。根据论文要求采用相应的引用格式，如APA、MLA、Chicago或Harvard等，并严格按照这些格式的规则来编排文内引用和参考文献。文内引用应自然地融入正文，增强论文的学术性和逻辑性。在参考文献列表中，细致地排列和格式化每一条引用，确保格式统一、准确无误，方便读者查找原始资料。你的工作将有助于提升论文的学术权威性，并尊重原创作者的知识产权。 ChatGPT&nbsp;Response: 15. 构建论证ChatGPT&nbsp;Prompts: 你是一位在“&lt;你的领域&gt;”内具备批判性思维和深厚学术素养的研究者。你的工作是在一篇学术论文中为一个特定的论点或假设构建一个引人深思的论证。首先，清晰地阐述你的论点，确保它是简明扼要、具有争议性，并且对你的研究领域具有实质性的意义。然后，概述那些能够支撑你论点的关键要点，每个要点都要有确凿的证据和充分的学术研究作为支撑。对于每个要点，提供相关文献的综合分析、数据的深入分析或理论的详尽探讨，以此来有力地支持你的论点。同时，思考可能的反对意见，并直接对其进行反驳，展示你的论点如何通过逻辑推理和实证数据得到充分的辩护。在论证过程中，使用有说服力的学术语言，保持客观的态度，并对不同的观点表示尊重。你的论证应该按照逻辑顺序展开，每个要点都建立在前一个要点的基础之上，最终引导读者得出一个充分论证的结论，这个结论应当强化你的论点的有效性和重要性。 ChatGPT&nbsp;Response: 结语 12345概括地说, 利用ChatGPT在研究和构思方面的帮助, 可以显著提升你的学术写作水平。但是, 使用时需谨慎, 以确保你的作品既真实又具有独创性。随着AI技术在教育领域的快速发展, 我们应该合理地利用这些工具, 既要发挥它们的辅助作用, 也要防止它们取代我们的努力。通过这种方式, ChatGPT不仅能够提升学术写作的品质, 还能激发更多的创新思维和协同学习。如果你对这些内容感兴趣, 不妨了解一下我们用来推广数字营销产品的ChatGPT应用建议。","tags":["ChatGPT","Prompt"],"categories":["AI"]},{"title":"圾皇狂喜 新手地狱？i9 13900H 魔改板U套装评测","path":"/2024/01/02/13900h/","content":"购入 《不是13900买不起只是ES更有性价比》 起初在抖音&amp;B站看到这块 Q1HY 魔改板U视频介绍，这块妖版最吸引人的地方就是这颗笔记本处理器 i9-13900H ES 魔改到 ITX 主板上，发售价才 1100。后来越来越多大佬们下场，随着双超 BIOS 发布，这块 i9-13900H ES 秒变 i9-13900HK ES，性价比瞬间爆炸。会玩啊还是你们会玩。又有网友完美黑苹果！13代黑苹果还能超频，这谁能忍，我愿意抗这个风险在1380价位入手一块，把陪伴我两年的 i5 9600K 平台替换了。这也可能是最后一代 intel 黑苹果，且玩且珍惜吧。（多年前购买过一块 i5 10500T ES QSRL， 7×24 一直稳定服役在我的 NAS 上，所以我对 ES 处理器的品质大多数还是有信心。） 过程 坑多 谨慎入手！先给大家泼个冷水 乐如上图，主板到手后，安装 Windows10 卡在安装界面，安装 Windows11 卡在选择语言界面，排查内存兼容情况，拆了三台电脑更换内存，问题依旧。怀疑是硬盘问题，又换三款M2硬盘，还是一样，不得已只能选择换货。店家收到测试没有任何问题，我彻底懵圈，但还是请商家换了一块主板。后面我们分析可能是电源，商家说有些高端电源在启动时会检测电流，如果电流过大会可能会出现这种问题，这种手工寨板反而不要使用高端电源(未验证)？索性我直接个二线电源，终于开机成功并顺利安装系统。但 RX580 显卡又莫名其妙卡 BIOS ，居然能跳过自检进系统。(最后还是通过刷显卡固件解决)，就这样来回折腾快半月，你就说坑多不多吧~ 跑分 装好系统跑一跑分，大家看个乐。 基本信息 压力测试 超频 这款 i9 13900H 刷入大佬提供的 BIOS 后可以超频，变身HK，可玩性瞬间拉满。说实话，超频我是小白，还在学习中。这里先跟群里大佬超作业，B站有很教程，大家可以自行摸索。 刷入BIOS刷入QQ群938881857 群共享的leo大佬 天邦Q1HY-BIOS-11.29双超BIOS 超频设置CPU超频设置 （超频有风险，请谨慎操作！）视频教程1️⃣图一: 设置中文 图二: 超频-AC Loadline-602️⃣图三: 高级- Turbo Ratio Limit Options 图四: 设置大小核为56-54-423️⃣图五六七: 高级- OverClocking Performance Menu - Processor - Per Core Ratio Override 开启，如图设置独立的时钟倍频 56-54-42 内存超频设置 （超频有风险，请谨慎操作！）1️⃣图一: 超频 - Memory profile - 自定义 - 按图设置2️⃣图二：按图设置Geek这块金百达 银爵 DDR4-3600只能超到 3800，大家可以试试 上4000 超频对比系统概要 CPU-Z &#x2F; ADIA64 未超频 VS (CPU 56-54-42 &amp; 内存 3800) Cinebench R23 CPU (56-54-42 &amp; 内存 3800) 黑果 EFI天邦&nbsp;13900H&nbsp;ES&nbsp;ITX&nbsp;黑苹果&nbsp;OpenCore&nbsp;EFI&amp;我的 https://github.com/hackintosh-club/TianBang-13900H-ES-ITX-OpenCorehttps://github.com/hackintosh-club/TianBang-13900H-ES-ITX-OpenCore https://github.com/igeekbb/TianBang-13900H-ES-ITX-OpenCorehttps://github.com/igeekbb/TianBang-13900H-ES-ITX-OpenCore 黑苹果绝对是Geek的主力系统，不能装黑苹果的电脑是不会考虑的。这里特别感谢 乌龙蜜桃来一打 网友提供 EFI ，Sonoma 14 基本完美，节约不少时间，也在此基础上对 OpenCore 做一些更改： USB重新定制 还原 macOS 原版启动画面 启动UI优化2K以上图标显示 博通网卡支持链接 黑果跑分Cinebench R23 CPU 56-54-42 &amp; 内存 3800 Geekbench 6 Disk 对比 VS 上任至此，这台 i9-13900HK 双系统已成为Geek的主力机，和上一任主力机做对比 CPU-Z &#x2F; ADIA64 i5-9600K VS i9-13900HK Cinebench R23 &#x2F; Geekbench i5-9600K VS i9-13900HK Disk i5-9600K VS i9-13900HK 换机成本 旧 型号 价格 售出 新 型号 价格 CPU i5-9600K 1010 580 CPU i9-13900H ES 1380 主板 B360M MORTAR 200 199 主板 B760 - 内存 金士顿DDR4-2666*16G 303 待售 内存 金百达DDR4-3600 406 硬盘1 SN770-500G (macOS) 279 硬盘1 SN770-500G (macOS) 硬盘2 WDC WDS500G(Windows) 255 硬盘2 WDC WDS500G(Windows) 风扇 利民 AXP90-X53 WHITE 白色 145 风扇 利民 AXP90-X53 WHITE 白色 电源 鑫谷750W 全模850 299 电源 鑫谷750W 全模850 机箱 超导合体ITX机箱 99 机箱 超导合体ITX机箱 合计 2590 779 合计 1786 配件都是TB&amp;闲鱼收的，如果将上任配件出掉一些，这次换机成本在千元以内，而性能岂止翻倍，后期要是不翻车还是挺香，个人意见仅供大家参考。 结语 其实如此强劲的性能，我的大多数应用环境 CPU 占用率都不会超过20%，平时也就在黑苹果看看 YouTube 刷刷 X， 偶尔打打单机或Switch^4，近几年性能满足了。花费一台 Apple TV 的钱就可以享受媲美 M2 Pro 性能的主机，能不能用到无所屌谓，主要享受的是DIY(折腾)。下一步再升级 PCIe 4.0 的 M.2 固态硬盘，读写干到 7000M ，然后升级显卡 RX 6650 TX ，又可以再战几年。 最后自曝一张（请自动忽略我凌乱的走线~） 参考","tags":["硬件","DIY"],"categories":["技术"]},{"title":"Proxmoxve 安装手记 - All in One","path":"/2023/11/29/proxmoxve/","content":"硬件配置文件下载CPU: I5 10500T ES版(QSRL) 6核12线程 内存: 16G+16G 主板: MAG B460M MORTAR 机械硬盘: WD30000FYYZS(3TB) * 3 固态硬盘: SN770(500G) 系统盘 PCI网卡: intel 82576 机箱: N1 名称 地址 名称 地址 Proxmox 下载 PveTools 下载 Ventoy 下载 OpenWrt 下载 Rufus 下载 集客网关 下载 Debian 下载 TrueNAS 下载 PVE 安装 特别引用 2022版通用型PVE_AIO服务器布局教程（上） 通用PVE集成软路由，KODI，基于LXC的Docker服务教程 PVE 换源PVE换国内源123wget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpgecho &quot;#deb https://enterprise.proxmox.com/debian/pve bullseye pve-enterprise&quot; &gt; /etc/apt/sources.list.d/pve-enterprise.listecho &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bullseye pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list Debian换源12mv /etc/apt/sources.list /etc/apt/sources.list.bknano /etc/apt/sources.list Sources.list加入源123456deb http://mirrors.ustc.edu.cn/debian stable main contrib non-free# deb-src http://mirrors.ustc.edu.cn/debian stable main contrib non-freedeb http://mirrors.ustc.edu.cn/debian stable-updates main contrib non-free# deb-src http://mirrors.ustc.edu.cn/debian stable-updates main contrib non-free# deb http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free# deb-src http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free 更新12apt updateapt upgrade -y 。 列出系统中所有包含字符串“eth”的 PCI 设备，通常是网卡。1lspci | grep -i &#x27;eth&#x27; BIOS 打开硬件直通（VT-d &amp; VMX）编辑Grub1nano /etc/default/grub 注释原条目，并增加开启参数123GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on&quot;或GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on pcie_acs_override=downstream&quot; 更新 grub1update-grub 创建虚拟机 (OpenWrt) 下载 OpenWrt定制OpenWrt固件 上传镜像根据自己需要新建虚拟机 在 PVE 下 `Shell` 输入1nano /etc/pve/qemu-server/[虚拟机编号].conf 将后面改为 cache=unsafe 添加 PCI 网卡 创建 CT (Docker) 下载模板、创建 特权\\LXC CT 模板换源12cp /usr/share/perl5/PVE/APLInfo.pm /usr/share/perl5/PVE/APLInfo.pm_backsed -i &#x27;s|http://download.proxmox.com|https://mirrors.tuna.tsinghua.edu.cn/proxmox|g&#x27; /usr/share/perl5/PVE/APLInfo.pm 重启服务1systemctl restart pvedaemon.service 为容器加入 GPU 核显 参考 司波图/通用PVE AIO安装教程 部分显卡可能需要更新内核才能找到渲染器1nano /etc/pve/lxc/[CT_ID].conf 123456lxc.cgroup2.devices.allow: c 226:0 rwmlxc.cgroup2.devices.allow: c 226:128 rwmlxc.cgroup2.devices.allow: c 29:0 rwmlxc.mount.entry: /dev/dri dev/dri none bind,optional,create=dirlxc.mount.entry: /dev/fb0 dev/fb0 none bind,optional,create=filelxc.apparmor.profile: unconfined 挂载NAS目录(SMB) 安装 cifs-utils 软件包，该软件包提供了用于与 CIFS 协议兼容的网络共享进行交互的工具1apt install cifs-utils -y 新建共享目录(nas_share)1mkdir /mnt/nas_share 创建密码文件1nano ~/.smbcredentials 设置 SMB 登录用户名&密码12username=用户名password=密码 修改自动挂载文件1nano /etc/fstab 设置文件挂载位置 \"/mnt/nas_share\"1//$smb_server/share /mnt/nas_share cifs credentials=/root/.smbcredentials,iocharset=utf8 0 0 Docker 安装 参考: 小白如何安装 Docker Clouddrive2安装前请检查 项目官网 最新配置 使用 fuse3 挂载云存储，启用 MountFlags123456mkdir -p /etc/systemd/system/docker.service.d/cat &lt;&lt;EOF &gt; /etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf[Service]MountFlags=sharedEOFsystemctl restart docker.service 1cd /mnt 1mount --make-shared / 服务目录\"/mnt/clouddrive2\"12345678910docker run -d \\ --name clouddrive2 \\ --restart unless-stopped \\ --env CLOUDDRIVE_HOME=/Config \\ -v /mnt/clouddrive2/CloudNAS:/CloudNAS:shared \\ -v /mnt/clouddrive2/Config:/Config \\ -p 19798:19798 \\--privileged \\--device /dev/fuse:/dev/fuse \\cloudnas/clouddrive2-unstable Emby 开心版安装前请检查 项目官网 最新配置 1234567891011121314docker run \\ --network=bridge \\ -p &#x27;8096:8096&#x27; \\ -p &#x27;8920:8920&#x27; \\ -v /data/emby:/config \\ -v /mnt/clouddrive2/CloudNAS/:/data \\ -e TZ=&quot;Asia/Shanghai&quot; \\ --device /dev/dri:/dev/dri \\ -e UID=0 \\ -e GID=0 \\ -e GIDLIST=0 \\ --restart always \\ --name emby \\ -d lovechen/embyserver:latest Portainer 汉化版安装前请检查 hashtag 项目官网 最新配置 一键安装1docker run -d --restart=always --name=&quot;portainer&quot; -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock 6053537/portainer-ce navidromecompose.yaml123456789101112131415version: &quot;3.3&quot;services: navidrome: container_name: navidrome restart: unless-stopped user: root volumes: - /mnt/clouddrive2/CloudNAS/阿里云盘Open/音乐:/music - /opt/stacks/navidrome/data:/data ports: - 4533:4533 environment: - ND_LOGLEVEL=info image: deluan/navidrome:latestnetworks: &#123;&#125; walloscompose.yaml1234567891011121314version: &quot;3.0&quot;services: wallos: container_name: wallos image: bellamy/wallos:latest ports: - 8383:80/tcp environment: TZ: America/Toronto # Volumes store your data between container upgrades volumes: - ./db:/var/www/html/db - ./logos:/var/www/html/images/uploads/logos restart: unless-stopped metubecompose.yaml12345678910version: &quot;3&quot;services: metube: image: ghcr.io/alexta69/metube container_name: metube restart: unless-stopped ports: - 8081:8081 volumes: - /path/to/downloads:/downloads 更新中……","tags":["Proxmoxve","虚拟机"],"categories":["技术"]},{"title":"RackNerd黑五闪购1C1G12GB圣何塞机房评测","path":"/2023/11/25/racknerd/","content":"RackNerd 黑五闪购第五波小鸡,年付 $8.5 开机 到手测 PING 值 原装系统跑分并不理想(实测可以解锁 GPT ) 这种速度就算是 $8.5 刀也太差了 站内本州跑满 1000M 跑本地非常稀碎(南方联通) HY2 协议都只能带到5W 测试时间 2023-11-24 at 19.48.41 重装&amp;测试第二天重装 Debian 12 纯净版,安装 BBR Plus 内核(非高峰期) 测试时间 2023-11-25 at 07.08.06 Ping 站内本州跑分 跑本地好看很多 HY2 协议可以拉到 17W! 最后再跑分 本地 Ping 好在对本地电信和联通都还算不错(200以内) 总结玩具鸡无疑,晚高峰拉垮,平时可当备用梯子,1GB内存也注定不能有更多玩法,重在便宜,月付5元不能过多要求.","tags":["VPS"],"categories":["技术"]},{"title":"PassWall 负载均衡 HAProxy 保姆级设置","path":"/2023/10/18/passwall-haproxy/","content":"关于 HAProxyPassWall 自带了一个负载均衡 HAProxy 功能，以前也折腾过，现在用也就轻车熟路了，目前使用 HAProxy 需要解决我两个痛点： 搬瓦工 500G 流量 UDP 阻断严重 OpenWrt 固件推荐 Haiibo ，对于爱折腾的人来说，都有非常稳定的表现。 HAProxy 设置开启 HAProxyPassWall - 【负载均衡】- 开启负载均衡 设置用户名 设置密码 添加节点 (协议、端口、密码等尽量保持一致) 负载比重、模式根据自己需求设置 保存&amp;应用 进入 HAProxy 保存后进入界面 &amp; 路由地址:1188 密码用户名就是刚设置的 可以看到每个节点流量情况，说明已启动成功。 新建负载均衡节点 【节点列表】新建一个【Socks 负载均衡】如图 地址填 OpenWrt 路由地址 端口 1181 保存 套用负载均衡节点 回到 PassWall【基本设置】 TCP 节点选择刚刚新建的【Socks 负载均衡】 【Socks 配置】也要新建一个【Socks 负载均衡】节点，端口 1081 保存并应用即可，进入 HAProxy 能看到流量在增加。 也可以使用 PassWall 分流功能 结束 Socks 套娃新玩法折腾好上面，我发现就一个节点也可以做 Socks 套娃的玩法，见推 https://x.com/geekbb/status/1713820323274224118?s=20 一般来说我们使用 PassWall 会直接使用节点或分流使用节点，但是如果使用本地 Socks 节点套一层梯子节点，我发现是对 UDP 流量阻断情况有所减轻的，甚至更快，大家可以设置试试： 设置 【节点列表】里新建一个 Socks 套娃，如图 【基本设置】-【Socks 配置】如图： 在 TCP 节点中选择 [ Socks 套娃] ，下面Socks 配置启用，Socks 节点选择你的梯子节点即可 下面上对比图 直接使用节点 使用 Socks 套娃 玩得愉快~","tags":["OpenWrt","负载均衡"],"categories":["技术"]},{"title":"欧洲 Scaleway 年付 40RMB VPS IPV6 搭梯评测","path":"/2023/10/06/Scaleway/","content":"#2023年10月9日更新 法国巴黎1C1G10GB &lt;融合怪测试&gt; SSH改密码登录 起因故事开始于： 《Scaleway 星辰 40 元 1 年 1C1G10G 的 IPV6 小鸡》 《Scaleway 星辰 IPV6 小鸡的各种抠门进阶玩法》 《Scaleway 超低价小鸡开机教程》 1C1G10G 100M 带宽 无限流量 荷兰阿姆斯特丹小鸡到手 (建议严格参考上面教程使用脚本开机) 为 Scaleway 纯 IPV6 添加 IPV4（WARP） 使用 Fscarmen&#x2F;warp warp-go 脚本添加 IPV4 支持，方便访问 IPV4 内容。 开启 BBR 不用折腾内核了 (我给你们避坑了)，直接开启原生 BBR (Debian 12) 同时适用于 ipv4&#x2F;ipv6 12echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf 生效 1sysctl -p 验证 (如果有 bbr 说明已开启) 1sysctl net.ipv4.tcp_available_congestion_control SSH 改密码登录12345678910#修改密码passwd#修改sshd_config配置文件vim /etc/ssh/sshd_config#找到以下选项把#去掉改成yes保存PermitRootLogin yesPubkeyAuthentication yesPasswordAuthentication yes#重启sshdservice sshd restart 跑分测试小鸡概况 + 国际组测速 国内组测速 1（荷兰） 国内组测速 1（法国巴黎节点） 国内组测速 2 这明显已超过 100M 带宽 搭建梯子 Vless_Reality + Hysteria2 并存八合一脚本 使用 mack-a 一键脚本 5-1 【图片参考】 Hysteria2 部署 Hysteria2 不同协议测速speed.cloudflare.comvless_reality_vision vless_reality_grpc Hysteria2 fast.comvless_reality_vision vless_reality_grpc Hysteria2 YouTubuvless_reality_grpc 和 vless_reality_vision 1080P 勉强观看，懒得截图了 Hysteria2 全体起立！这是 100M ? iPhone+ 小火箭全局 上传速度被南方联通焊死，请忽略。 vless_reality_grpc vless_reality_vision Hysteria2 总结 一定要有 IPV6 环境，可参考《不良林》《韩风 Talk》IPV6 开通教程 可建梯子，vless_reality_grpc 和 vless_reality_vision 协议勉强可用，Hysteria2 直接起飞。 Hysteria2 由于被运营商阻断或限速严重，需使用端口跳跃，可参考《对抗 QoS 阻断&amp;限速 Hysteria2 端口跳跃设置》注：需将 iptables 命令替换为 ip6tables。 IPV6 端口跳跃无法使用 已有大佬点拨搞定【参考】(Scaleway 对使用 Hysteria2&#x2F;UDP 态度未知，有被封风险) 40RMB 一年 100M 带宽无限流量小鸡，套上 WARP 可玩性很高，确实值得折腾。我跑两个轻 Docker&#x2F;备用梯子，很满足。 以上链接整理全了，基本上可以说是入手 Scaleway 的懒人包，折腾挂了就删机重开，大家玩得开心。 法国巴黎 1C1G10GB 测试 短链： http://paste.spiritlhl.net/u/yqTG2D.txt","tags":["VPS","IPV6"],"categories":["技术"]},{"title":"PassWall+MosDNS 分流设置","path":"/2023/09/29/passwall2mosdns/","content":"**声明**：这次仅仅我个人经验，因多年没有折腾 DNS，凭借以往设置 SmartDNS 的经验，加上又学习 MosDNS 插件基本设置，本着简单、高效、不易出错的原则，舍弃 MosDNS+Adgurad Home+PassWall 复杂套娃，只使用 PassWall+MosDNS 实现秒开网页和 4K (梯子给力)。如发现有误或更好的配置，欢迎大家上推交流 twitter 2023.10.6 更新： MosDNS 更新到 V5.2.1 https://x.com/geekbb/status/1709549373317898667?s=20, GitHub, fab fa-github fa-fw fa-lg, GitHub 将国内 DNS 服务器更换为 HTTPS DNS 服务器并发数改为 2 启用 DNS 广告过滤 PassWall 勾选 ChinaDNS-NG 起因前两天我 Twitter 上推荐的 OpenWrt 固件中自带有一款 DNS 插件：MosDNS，在其官方 https://github.com/IrineSistiana/mosdns, GitHub, fab fa-github fa-fw fa-lg, GitHub 上显示是 2020 年 11 月推出第一版，现在已经迭代到 v5.2.1，我发现此 DNS 转发器设置比 SmartDNS 简单太多。想到不良林这两期【再谈 DNS 泄漏】【进阶•DNS 泄漏篇】，在当时并没有引起我的重视，心想泄漏就泄漏，你能把我怎么样，我们就是追求极致网速体验。现在想想确实天真了 (承德) 。既然能够通过技术避免一些不必要的麻烦，为什么不更好的保护自己呢，那下面记录一下我的设置流程。 MosDNS 设置MosDNS 基本设置 - 基本选项 MosDNS 基本设置 - 高级选项 如要启用 DNS 广告过滤，记得勾选最后一项 PassWall 设置PassWall DNS 远程 DNS 填写 127.0.0.1:5335 OpenWrt DHCP 设置DHCP&#x2F;DNS 基本设置 查看 DNS 转发 是否为 127.0.0.1#5335（以上设置好后此处会自动变更，只需要核对。） 验证以上设置完成后，再查询你的 DNS 泄漏https://ipleak.net/ 和 WebRTC 泄漏https://browserleaks.com/webrtc 如果没有中国 DNS，就基本搞定了。这只是最初阶入门玩法，要看高阶玩法和了解原理可参考不良林的几期 DNS 讲解视频。","tags":["VPS","DNS"],"categories":["技术"]},{"title":"macOS 14 Sonoma 博通网卡驱动支持","path":"/2023/09/27/Hackintoswifi/","content":"macOS 14 Sonoma众所周知，苹果 macOS 14 终于把大刀抡向博通无线网卡，BCM94360 &#x2F; BCM943602 都无法在 Sonoma 驱动，目前的解决方案只有使用 OpenCore Legacy Patcher，可以完美驱动博通无线网卡，唯一缺点就是每次升级 OS 都需要OpenCore Legacy Patcher打补丁，下面是操作教程。 OpenCore Legacy Patcher 已经对 macOS Sonoma 有初步支持，原文 https://github.com/dortania/OpenCore-Legacy-Patcher/pull/1077 OpenCore 设置NVRAM-随机访问存储器设置 将系统完整性保护设为 0x0803、禁用 AMFI 在 NVRAM&gt;Add&gt;7C436110-AB2A-4BBB-A880-FE41995C9F82&gt;csr-active-config 添加 03080000 NVRAM&gt;Add&gt;7C436110-AB2A-4BBB-A880-FE41995C9F82&gt;boot-args 添加 amfi=0x80 不再推荐用上面的amfi&#x3D;0x80，推荐使用 AMFIPass.kext ，改为添加-amfipassbeta参数 Misc-其它设置 将安全启动模型设置为 Disabled Misc &gt; Security &gt; SecureBootModel &gt; Disabled Kernel-内核设置按以下顺序注入三个 kext (一定要按图设置，否则有卡白苹果的风险) 下载： IOSkywalk.kext、IO80211FamilyLegacy.kext 、 AMFIPass.kext （右边下载原始文件） OSkywalk.kext O80211FamilyLegacy.kext O80211FamilyLegacy.kext(AirPortBrcmNIC) AMFIPass.kext 最小内核设置为 23.0.0 阻止com.apple.iokit.IOSkywalkFamily加载 (一定要按图设置，否则有卡白苹果的风险) 最小内核设置为 23.0.0 Strategy(策略) 设置为 Exclude(阻止) 以上设置好后重启电脑 OpenCore Legacy Patcher 设置OpenCore Legacy Patcher 下载 点 Post-Install Root Patch Start Root Patching 以上设置好后重启电脑 搞定 且玩且珍惜~~ 番外 博通网卡速率问题早在 macOS 13 我就发现，博通部分网卡，虽然免驱，但是链接后速率很低（350Mbps 以下），刚开始以为是无线路由问题，后来才知道需要调整所属地区代码。 下载 AirportBrcmFixup.kext 放入 Kernel-内核设置，最大内核按图设置。（注意加载顺序） NVRAM-随机访问存储器设置 boot-args 添加 -brcmfxbeta brcmfx-country=HK 地区设置成香港 保存重启搞定","tags":["黑苹果"],"categories":["技术"]},{"title":"对抗 QoS 阻断&限速 Hysteria2 端口跳跃设置","path":"/2023/09/22/Hysteria2Port/","content":"12#2023年10月9日更新- 增加IPV6设置 UDP 限速三大运营商对 UDP 的阻断&amp;限速肯定是存在的，至少有 QoS 限制，刚开始还以为南方联通比较宽容，没想都是一丘之貉，我遇见的是阻断，具体表现为“连续下载或跑大流量3分钟左右，就直接阻断，大概再过几分钟又恢复连接“，这些限制一般只是单个端口。本篇博文就来说说如何设置 Hysteria2 端口跳跃，以对抗运营商的阻断和限速。 搭建 Hysteria 2关于 Hysteria2 节点的搭建，可以参考上一期《Hysteria2 &amp; VLESS-gRPC-uTLS-REALITY 对比测试》 配合 Iptables 实现端口跳跃按照 Hysteria 官网的说法，Hysteria 服务端并不能同时监听多个端口，因此不能在服务器端使用上面的格式作为监听地址。建议配合 iptables 的 DNAT 将端口转发到服务器的监听端口。 [来源] 下面就以我的 Hysteria 2 来演示：端口 5353 端口跳跃 20000-50000 安装 iptables-persistent1apt install iptables-persistent 一直 YES&amp;ENTER IPV4 设置清空默认规则&amp;自定义规则1iptables -F 1iptables -X 允许本地访问1iptables -A INPUT -i lo -j ACCEPT 允许本地访问1iptables -A INPUT -p tcp --dport 22 -j ACCEPT 开放 HTTP / HTTPS 端口1iptables -A INPUT -p tcp --dport 80 -j ACCEPT 1iptables -A INPUT -p tcp --dport 443 -j ACCEPT 开放 UDP 端口（5353 替换为自己 Hysteria 的监听端口）1iptables -A INPUT -p udp --dport 5353 -j ACCEPT 开放 UDP 端口跳跃范围（端口范围为 20000-50000）1iptables -A INPUT -p udp --dport 20000:50000 -j ACCEPT 允许接受本机请求之后的返回数据1iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT 其他入站一律禁止1iptables -P INPUT DROP 允许所有出站1iptables -P OUTPUT ACCEPT 查看开放的端口1iptables -L 添加 NAT 规则 [建议参考]将匹配到的 UDP 数据包的目标端口在 20000 到 50000 之间的数据包，重定向到本地服务器的 5353 端口1iptables -t nat -A PREROUTING -p udp --dport 20000:50000 -j DNAT --to-destination :5353 查看 NAT 规则1iptables -t nat -nL --line IPV6 设置清空默认规则&自定义规则1ip6tables -F 1ip6tables -X 允许本地访问1ip6tables -A INPUT -i lo -j ACCEPT 开放 SSH 端口（默认 22）1ip6tables -A INPUT -p tcp --dport 22 -j ACCEPT 开放 HTTP / HTTPS 端口1ip6tables -A INPUT -p tcp --dport 80 -j ACCEPT 1ip6tables -A INPUT -p tcp --dport 443 -j ACCEPT 开放 UDP 端口（5353 替换为自己 Hysteria 的监听端口）1ip6tables -A INPUT -p udp --dport 5353 -j ACCEPT 开放 UDP 端口跳跃范围（端口范围为 20000-50000）1ip6tables -A INPUT -p udp --dport 20000:50000 -j ACCEPT 允许接受本机请求之后的返回数据1ip6tables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT 其他入站一律禁止1ip6tables -P INPUT DROP 允许所有出站1ip6tables -P OUTPUT ACCEPT 查看开放的端口1ip6tables -L 添加 NAT 规则 [建议参考]将匹配到的 UDP 数据包的目标端口在 20000 到 50000 之间的数据包，重定向到本地服务器的 5353 端口1ip6tables -t nat -A PREROUTING -p udp --dport 20000:50000 -j DNAT --to-destination :5353 查看 NAT 规则1ip6tables -t nat -nL --line 保存 iptables 规则1netfilter-persistent save 如果你填写错误，可以使用以下命令删除 iptables 规则 删除 iptables 规则删除指定的 NAT 规则：1iptables -t nat -D PREROUTING &lt;行号&gt; 删除所有 NAT 规则：1iptables -t nat -F 1234567891011# 删除所有规则 sudo ip6tables -F # 删除 INPUT 链中的所有规则 sudo ip6tables -F INPUT # 删除 INPUT 链中的第一个规则 sudo ip6tables -D INPUT 1 # 禁用 INPUT 链中的第一个规则 sudo ip6tables -I INPUT 1 -j DROP Hysteria2 服务器配置文件自备域名版123456789101112131415161718192021222324cat &lt;&lt; EOF &gt; /etc/hysteria/config.yamllisten: :5353 #监听端口#使用 CA 证书acme: domains: - www.igeekbb.com #你的域名，需要先解析到服务器 ip email: geek@gmail.com#使用自签证书#tls:# cert: /etc/hysteria/server.crt# key: /etc/hysteria/server.keyauth: type: password password: 123456 #设置认证密码 masquerade: type: proxy proxy: url: https://bing.com #伪装网址 rewriteHost: trueEOF 生成自签证书1openssl req -x509 -nodes -newkey ec:&lt;(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj &quot;/CN=bing.com&quot; -days 36500 &amp;&amp; sudo chown hysteria /etc/hysteria/server.key &amp;&amp; sudo chown hysteria /etc/hysteria/server.crt 无域名自签版123456789101112131415161718192021222324cat &lt;&lt; EOF &gt; /etc/hysteria/config.yamllisten: :5353 #监听端口#使用 CA 证书#acme:# domains:# - www.igeekbb.com #你的域名，需要先解析到服务器 ip# email: geek@gmail.com#使用自签证书tls: cert: /etc/hysteria/server.crt key: /etc/hysteria/server.keyauth: type: password password: 123456 #设置认证密码 masquerade: type: proxy proxy: url: https://bing.com #伪装网址 rewriteHost: trueEOF 这里展示 PassWall 客户端的填法 以下是 Iptables 卸载步骤 卸载 Iptables停止 iptables 服务1sudo systemctl stop iptables 禁用 iptables 服务1sudo systemctl disable iptables Debian 系统卸载 iptables 软件包1sudo apt-get remove iptables CentOS 系统卸载 iptables 软件包1sudo yum remove iptables 删除 iptables 配置文件&规则1sudo rm -r /etc/iptables/ 12sudo iptables -Fsudo iptables -X 资料参考：https://github.com/TinrLin/sing-box_-tutorial/tree/main/Hysteria2","tags":["VPS"],"categories":["技术"]},{"title":"Hysteria2 & VLESS-gRPC-uTLS-REALITY 对比测试","path":"/2023/09/18/hysteria/","content":"起因起因我在 9 月 13 日购买了 搬瓦工 CN2 GIA 特别限量版 年付 300 多元，香是确实香，但我没有注意月 500G 流量是双向计费，实际就是 250G，对于我来说是远远不够。随即和搬瓦工协商退款，经过几番邮件拉扯，搬瓦工表示虽然我满足 30 天内退款政策，但流量已使用超过 1&#x2F;10，所以不给我退款。（上一篇评测时消耗了 100G） 加持 Oracle 甲骨文云于是只能把我的真 • 传家宝 Oracle 甲骨文云日本拿出来当当备胎，鉴于甲骨文日本节点网络常年处于残废状态，完全不能使用。正好 不良林 最新一期视频 使用 Hysteria2 歇斯底里来拯救垃圾 VPS，尝试一下看看能不能让甲骨文垃圾线路焕发第二春。 Oracle 甲骨文云日本→ 南方联通 效果部署完 Hysteria V2 后先来看一看效果： 同一台 VPS(甲骨文日本) 同一视频测速 Hysteria2 & VLESS-gRPC-uTLS-REALITY 两种协议 两个时间段测试 2023年9月18日12:10测试 VLESS-gRPC-uTLS-REALITY VS Hysteria2 2023年9月18日12:1019:30晚高峰测试（十倍？？） VLESS-gRPC-uTLS-REALITY VS Hysteria2 效果真是惊人，简直满血复活了！当搬瓦工备胎足也。 总结：有客户端条件的朋友可以直接上，垃圾线路 VPS 更是无需犹豫！ 部署 Hysteria2不良林 的视频教程已相当详细，按需操作即可 https://www.youtube.com/watch?v=CXj-ID33MhUhttps://www.youtube.com/watch?v=CXj-ID33MhU 下面把视频教程相关文档搬运过来方便大家 第一步 一键安装 Hysteria21bash &lt;(curl -fsSL https://get.hy2.sh/) 第二步 生成自签证书1openssl req -x509 -nodes -newkey ec:&lt;(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj &quot;/CN=bing.com&quot; -days 36500 &amp;&amp; sudo chown hysteria /etc/hysteria/server.key &amp;&amp; sudo chown hysteria /etc/hysteria/server.crt 第三步 服务器配置文件123456789101112131415161718192021222324cat &lt;&lt; EOF &gt; /etc/hysteria/config.yamllisten: :443 #监听端口#使用 CA 证书#acme:# domains:# - a.com #你的域名，需要先解析到服务器 ip# email: test@sharklasers.com#使用自签证书#tls:# cert: /etc/hysteria/server.crt# key: /etc/hysteria/server.keyauth: type: password password: 123456 #设置认证密码 masquerade: type: proxy proxy: url: https://bing.com #伪装网址 rewriteHost: trueEOF 服务器相关指令123456789101112#启动Hysteria2systemctl start hysteria-server.service#重启Hysteria2systemctl restart hysteria-server.service#查看Hysteria2状态systemctl status hysteria-server.service#停止Hysteria2systemctl stop hysteria-server.service#设置开机自启systemctl enable hysteria-server.service#查看日志journalctl -u hysteria-server.service 客户端配置文件123456789101112131415server: ip:443auth: 123456bandwidth: up: 20 mbps down: 100 mbps tls: sni: a.com insecure: false #使用自签时需要改成truesocks5: listen: 127.0.0.1:1080http: listen: 127.0.0.1:8080 sing-box 配置文件 (Android/IOS)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293&#123; &quot;dns&quot;: &#123; &quot;servers&quot;: [ &#123; &quot;tag&quot;: &quot;cf&quot;, &quot;address&quot;: &quot;https://1.1.1.1/dns-query&quot; &#125;, &#123; &quot;tag&quot;: &quot;local&quot;, &quot;address&quot;: &quot;223.5.5.5&quot;, &quot;detour&quot;: &quot;direct&quot; &#125;, &#123; &quot;tag&quot;: &quot;block&quot;, &quot;address&quot;: &quot;rcode://success&quot; &#125; ], &quot;rules&quot;: [ &#123; &quot;geosite&quot;: &quot;category-ads-all&quot;, &quot;server&quot;: &quot;block&quot;, &quot;disable_cache&quot;: true &#125;, &#123; &quot;outbound&quot;: &quot;any&quot;, &quot;server&quot;: &quot;local&quot; &#125;, &#123; &quot;geosite&quot;: &quot;cn&quot;, &quot;server&quot;: &quot;local&quot; &#125; ], &quot;strategy&quot;: &quot;ipv4_only&quot; &#125;, &quot;inbounds&quot;: [ &#123; &quot;type&quot;: &quot;tun&quot;, &quot;inet4_address&quot;: &quot;172.19.0.1/30&quot;, &quot;auto_route&quot;: true, &quot;strict_route&quot;: false, &quot;sniff&quot;: true &#125; ], &quot;outbounds&quot;: [ &#123; &quot;type&quot;: &quot;hysteria2&quot;, &quot;tag&quot;: &quot;proxy&quot;, &quot;server&quot;: &quot;ip&quot;, &quot;server_port&quot;: 443, &quot;up_mbps&quot;: 20, &quot;down_mbps&quot;: 100, &quot;password&quot;: &quot;123456&quot;, &quot;tls&quot;: &#123; &quot;enabled&quot;: true, &quot;server_name&quot;: &quot;a.com&quot;, &quot;insecure&quot;: false &#125; &#125;, &#123; &quot;type&quot;: &quot;direct&quot;, &quot;tag&quot;: &quot;direct&quot; &#125;, &#123; &quot;type&quot;: &quot;block&quot;, &quot;tag&quot;: &quot;block&quot; &#125;, &#123; &quot;type&quot;: &quot;dns&quot;, &quot;tag&quot;: &quot;dns-out&quot; &#125; ], &quot;route&quot;: &#123; &quot;rules&quot;: [ &#123; &quot;protocol&quot;: &quot;dns&quot;, &quot;outbound&quot;: &quot;dns-out&quot; &#125;, &#123; &quot;geosite&quot;: &quot;cn&quot;, &quot;geoip&quot;: [ &quot;private&quot;, &quot;cn&quot; ], &quot;outbound&quot;: &quot;direct&quot; &#125;, &#123; &quot;geosite&quot;: &quot;category-ads-all&quot;, &quot;outbound&quot;: &quot;block&quot; &#125; ], &quot;auto_detect_interface&quot;: true &#125;&#125;","tags":["VPS"],"categories":["技术"]},{"title":"入手搬瓦工 CN2 GIA 特别限量版","path":"/2023/09/14/bandwagonhost/","content":"入手2023 年 9 月 13 日，搬瓦工 $46&#x2F;年 CN2 GIA 特别限量版开卖，看介绍机房可选日本软银，对于南方联通还是很不错的，随即入手一台玩玩，以下是该小鸡测试相关参数，仅供大家参考。 参数 网速测试 家宽：南方联通 200M Ping 流媒体解锁 科学上网 总结相对于搬瓦工自家产品线来说，还是很有性价比的一台 VPS，日本软银对联通的延迟、速度都很不错。只是 500M 内存差点意思，用来富强倒也足够，流量只有 500G 有点遗憾，传家宝谈不上，物有所值吧。","tags":["VPS"],"categories":["技术"]},{"title":"稳定三年的斐讯 K2T 三台 KVR 组网方案","path":"/2023/08/08/K2TKVR/","content":"起因早在 19 年，看了“司波图“的《斐讯 K2T 无线路由 KVR 组网实战》，高通 Soc 方案，QCA9886 无线芯片。作为垃圾佬中的性价比之王，种草了斐讯 K2T，当时 K2T 还是矿难产品，各大二手平台充斥着物美价廉的 K2T，随即入手两台斐讯 K2T+ 新三路由器给家里组网。 K2T 刷机记得 2019 年购买时还是斐讯原装系统，需要自己刷 breed，也是在“恩山论坛 K2T 版块”找到刷机教程搞定，现在购买的基本都刷好 OpenWRT 或集客 AC 了，自然也刷好了 breed。在这三年的使用中，发现新三路由器 (Newifi3) 刷集客固件组网还是没有 K2T 稳定，AP 管理时常掉线（网未断）。就在前两天刷 PDD 又看到了 K2T，价格居然降下来了，70 元入手一台，把三路由器 (Newifi3) 替换，组成 K2T 三台 KVR，爽歪歪。 进入 Breed到货后直接戳住 ‘RESET’ 孔，上电开机，breed 后台是 192.168.1.1 刷入集客官网下载的固件GECOOS_K2T_QCA956X_7.1_2022022200.bin （无需注册，功能解锁） 接入集客 AP重启后自动接入部署在 Unraid 的集客网关 AC 配好默认模板，接入后自动套用 速度测试这里借用司波图的图 结语斐讯 K2T 无线路由做为家宽在 500M 以内，如果喜欢折腾和追求性价比，还是非常推荐。这两台在近四年的使用中，一直稳定运行，中途一只电源坏过一次，在 PDD 单补了一个电源大概在 30 元左右，成本已经很低了。 就在准备发布这篇博文的时候，PDD 购买的 K2T 电源就故障了，具体表现是每个 10 分钟就重启，已申请退款😂，马上重新在淘宝以 65 元下单。所以买矿难产品就是看人品，想买到全新基本不可能，好在另外两台一直稳定了近四年，已经值票价。来吧，垃圾佬就不要怕折腾。","tags":["硬件","DIY"],"categories":["技术"]},{"title":"从 NotionNext 转战 Hexo 博客记录","path":"/2023/07/28/notion2hexo/","content":"起因 Geek 以前通过 NotionNext 搭建博客，Vercel 托管，可惜 NotionNext 目前优化得还不是很好 (虽然作者很努力在更新)，随即想换一个轻博客程序。 NotionNext 的性能测试： Hexo在众多轻博客程序，看中了 Hexo ，主要是 butterfly 主题一眼缘，最后选择了 Hexo 。作为麻瓜 (非程序员)，发奋自学三天 (中途有放弃)，基本完成了 Hexo 搭建 + 部署 Github + 图片 CDN ( jsdelivr ) + CSS 微调，达成全套白嫖，Hexo 性能也是出奇的好，很是满意！ https://pagespeed.web.dev/ 测试 Google Chrome Lighthouse 桌面设备测试 Lighthouse 移动设备测试 关于搭建 Hexo关于搭建中踩真是踩了不少坑，这里记录一些遇见问题后 Google，也找到一些不错的 Hexo 教程网站，分享给大家，方便今后有需要搭建 Hexo 的朋友自取。 Hexo 官方文档（推荐） Markdown 简单世界（推荐） 使用 Hexo 从 0 到 1 搭建个人博客详细教程（推荐） Butterfly 主题安装文档（Jerry） Butterfly 主题美化教程 Hexo 中 Buttefly 最新教程总览 (偷掉月亮的阿硕) Butterfly 的魔改教程 （亦小封） Butterfly 主题功能介绍 (一笔淡墨) 域名购买在 Spaceship 用促销代码 COM67 ，仅 1.79 刀购买到我心仪的 COM 域名，次年续费 8.98 刀，还能承受。 结语在 GitHub Pages 上部署 Hexo ,本以为墙内无法访问，没想到目前也是可以正常打开，实属意外之喜，免费又稳定的方案，完美。当然如果算上域名花费，首年 12.8 元，以后 64 元&#x2F;年（少喝几杯奶茶？）。 好了，既来之则安之，以后好好做有趣的内容输出。谢谢大家看到这里，目前未开通评论，目前我只有 Twitter，有事可以上 X 交流。","tags":["Hexo"],"categories":["web"]},{"title":"Docker 部署免费 GPT4-FreeGPT","path":"/2023/07/07/FreeGPT4/","content":"💡 freegpt-webui项目好像又行了，虽然不太稳定，免费的还要什么自行车。能用就行https://github.com/ramonvc/freegpt-webui 使用 Docker 部署非常简单 (本地可用 OrbStack) 拉取镜像 1docker pull ramonvc/freegpt-webui 启动 1docker run -p 1338:1338 ramonvc/freegpt-webui 浏览器输入（本地） 1http://127.0.0.1:1338` or `http://localhost:1338 GPT-4 对话，我使用了我爸爸妈妈结婚，为什么没有邀请我？ 来测试，还真是 GPT4，不过有时回答不太稳定 而 GPT3.5-turbo 0613 还是老样子 💡 最后：免费 GPT，对话受网络影响容易出错，有时需要多试几次，当成备用玩玩，足也。","tags":["ChatGPT","Docker"],"categories":["AI"]},{"title":"618 RSSHub 订阅《什么值得买》榜单分享","path":"/2023/06/09/RSSHub/","content":"618 快到了，大家有什么购买计划？如何还没有，不妨订阅我分享的《什么值得买》各类榜单、史底、卷活动😁，把手拿出来，我们一起剁。 什么值得买《什么值得买》网站只提供了五个频道 RSS 订阅链接：https://www.smzdm.com/dingyue 什么值得买 + RSSHub以下 Rss 订阅链接是结合 万物皆可 RSS 的 RSSHub 打造 RSSHub 由路《什么值得买》RSSHub&#x2F;购物&#x2F;什么值得买 https://docs.rsshub.app/shopping.html#shen-me-zhi-de-mai 该页面提供非常详细的《什么值得买》RSS 定制频道方法，这里我分享几个自用了频道，大家可以举一反三，客制化自己喜欢的订阅频道。 好价类 好价电商榜 - 券活动 -24 小时 https://rsshub.app/smzdm/ranking/dianshang/24/24 好价电商榜 - 天猫 -24 小时 https://rsshub.app/smzdm/ranking/dianshang/25/24 好价电商榜 - 京东 -24 小时 https://rsshub.app/smzdm/ranking/dianshang/23/24 好价品类榜 - 全部 -3 小时 https://rsshub.app/smzdm/ranking/pinlei/11/3 好价品类榜 - 电脑数码 -24 小时 https://rsshub.app/smzdm/ranking/pinlei/13/24 好价品类榜 - 运动户外 -24 小时 https://rsshub.app/smzdm/ranking/pinlei/14/24 文章类 好文榜 - 资讯 -24 小时 https://rsshub.app/smzdm/ranking/haowen/zx/24 好文榜 - 原创 -24 小时 https://rsshub.app/smzdm/ranking/haowen/yc/24 今日热门 - 什么值得买好文 https://rsshub.app/smzdm/haowen/1 周热门 - 什么值得买好文 https://post.smzdm.com/hot_7 月热门 - 什么值得买好文 https://post.smzdm.com/hot_30 关键词 历史低价 - 什么值得买 https://rsshub.app/smzdm/keyword/%E5%8E%86%E5%8F%B2%E4%BD%8E%E4%BB%B7 电脑数码 - 什么值得买 https://rsshub.app/smzdm/keyword/%E7%94%B5%E8%84%91%E6%95%B0%E7%A0%81 运动户外 - 什么值得买 https://rsshub.app/smzdm/keyword/%E8%BF%90%E5%8A%A8%E6%88%B7%E5%A4%96","tags":["RSS"],"categories":["web"]},{"title":"124 元实现最佳性价比双千兆软路由 OpenWrt","path":"/2023/05/30/Routeropenwrt/","content":"本文所有配件均来至二手闲鱼，无任何推广成份，只是技术分享 购入这台我家云是我在 2020 年在闲鱼上以 85 元购得的。当时卖家已经刷好了 omv，我打算将其用作一个轻量级 NAS。随着片片越来越多，一个硬盘的 NAS 空间已经捉襟见肘，慢慢就搁置仓库。 没想到三年过去了，价格居然没有多大变化，相比 N1 R2S 那个炒得老高的溢价，不知道好多少倍 软路由需求最近有一个使用软路由的场景需求，要求不高，我决定从仓库里拿出我家云刷成 OpenWrt, 此外，它还有一个 USB 3.0 接口，于是我在闲鱼上以 39 元收购了一个绿联 USB 千兆网卡，实现了双千兆软路由，真正的最佳性价比 总价 85+39&#x3D;124 元，还要什么自行车。 硬件配置CPU RK3328 eMMC 8G 的储存空间 1G 内存 做一个软路由足够了，平时还跑一两个 docker 也是没有问题 关于刷机刷机视频在 YouTube 和 B 站有一大把，大家可以参考，只是额外需要用双 USB 公头刷机，建议大家不要单独购买 (节省成本到极致)，直接和我一样，随便找两根四芯 USB 充电线，自己接上就 OK。 固件选择高大全就选恩山论坛的 flippy +集成 N 多功能，USB 网卡驱动也无优 https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=4076037&amp;highlight=%E6%88%91%E5%AE%B6%E4%BA%91 电报群下载地址，我家云固件的英文叫 L1pro https://t.me/openwrt_flippy 自己制定 OpenWrt 固件 supeshttps://supes.top/ 需要什么功能自己选，免费只支持 5 个，不过已经够用了，集成了 https://op.supes.top/packages/aarch64_cortex-a53 软件仓库，后期可以在 OpenWrt 里面自行安装 后记我家云相关介绍文章除了在恩山论坛，&lt;什么值得买&gt;里面也有，所以大家想了解得更详细，更多的玩法，可以搜索看看。现在它做为一个合格的过墙的软路由，性能已是绰绰有余。","tags":["OpenWrt","软路由"],"categories":["技术"]},{"title":"用 Docker 将类 ChatGPT 官方服务部署到 OpenWrt 软路由","path":"/2023/05/26/pandora/","content":"介绍在生活和板砖奔波两地，ChatGPT 官网又经常抽风，碰巧两地都有软路由 OpenWrt，所以我将 ChatGPT 部署到软路由上。两地的网关都是 192.168.2.1，再把软路由上的 ChatGPT 加入 Google Chrome 收藏夹，这样就能随时在两地快速访问。 项目这次使用的是潘多拉 (Pandora)，一个使用 Access Token 实现了网页版 ChatGPT 的开源项目。后端优化，绕过 Cloudflare，速度喜人。 项目 地址 潘多拉 (Pandora) https://github.com/pengzhile/pandora Access Token http://chat.openai.com/api/auth/session Access Token 有效期 14 天，期间访问不需要梯子 部署安装 Docker打开 OpenWrt 我使用的固件是 https://supes.top/ ，找到系统—软件包，点击更新列表 更新后分别安装： luci-lib-jsonc luci-lib-docker luci-app-dockerman 安装完成后就可以在左栏找到 Docker 下面的操作建议在 SSH 完成，OpenWrt 上操作 Docker 真难用！ 使用 SSH 工具连接 OpenWrt 网关 192.168.2.1，用户名和密码就是 OpenWrt 的用户名和密码。推荐工具 electerm 拉取镜像1docker pull pengzhile/pandora 运行镜像1docker run -e PANDORA_CLOUD=cloud -e PANDORA_SERVER=0.0.0.0:8899 -p 8899:8899 -d pengzhile/pandora 更多 Docker 环境变量请看： pandora 环境变量 获取 Access Token 官方登录，然后访问 这里 拿 Access Token 有效期 14 天 也可以直接用 OpenAI 帐号登录打开 http:&#x2F;&#x2F;网关:8899&#x2F;我使用 Access Token 搞定，使用 cloud 模式，和 ChatGPT 官网无异，聊天记录同步更新，比官网稳定快捷。 设置开机启动 (非必须) 使用&#x2F;etc&#x2F;rc.local 文件来执行自定义的启动脚本 找到/etc/rc.local文件 在文件的末尾添加以下内容 123#!/bin/sh/etc/init.d/dockerd restart # 重启Docker服务sleep 10 # 等待10秒，确保Docker服务已启动 docker start my_container # 启动Docker容器 把上面的 docker start my_container 替换成 openwrt Docker 里的容器 ID 比如我的是 3c3ab7807401docker start 3c3ab7807401 保存并关闭文件。 授予/etc/rc.local文件执行权限： 1chmod +x /etc/rc.local","tags":["ChatGPT","Docker","OpenWrt"],"categories":["AI"]},{"title":"我把使用多年的哪吒监控换成了 ServerStatus-Rust","path":"/2023/05/23/ServerStatusRust/","content":"介绍 当使用一个东西太久，就会出现审美疲劳，哪吒监控使用多年，倒是也没有掉过链子，搭建也方便，监控项目中规中矩，报警通知也很好配置，非常适合普通用户。不过生命在于折腾，我就喜欢不断尝试新的事物。 很久以前就看中 ServerStatus 监控面板，感觉就是简洁过头，没有后台，对小白来说搭建也不是太友好，最近发现 Rust 版 ServerStatus 云探针，ServerStatus 威力加强版，保持轻量和简单部署，也支持显示三网 ping 值和丢包率，这样一来，也可以把部署的 smokeping 给删除了 搭建 ServerStatus-Rust 项目 主页 Github https://github.com/zdz/ServerStatus-Rust 说明文档 https://doc.ssr.rs/ 快速部署服务端1mkdir -p /opt/ServerStatus &amp;&amp; cd /opt/ServerStatus 12wget --no-check-certificate -qO one-touch.sh &#x27; https://raw.githubusercontent.com/zdz/ServerStatus-Rust/master/one-touch.sh &#x27;bash -ex one-touch.sh 部署完毕，打开 http://127.0.0.1:8080/ 或 http:&#x2F;&#x2F;&lt;你的IP&gt;: 8080&#x2F; 服务端配置文件在&#x2F;opt&#x2F;ServerStatus&#x2F;config.toml, 可按需修改。参考：https://doc.ssr.rs/rapid_deploy/ 一键部署客户端部署好你的 Server 后，请自行替换下面的 ssr.rs 为你的域名，我是使用 NginxProxyManager 反代了服务端 IP，顺便套上 ssl 不同的主机可以运行相同的命令注册到同一组 1curl -sSLf &quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;alias=$ (hostname)&quot; | bash 安装并启用 vnstat，细节参见 https://doc.ssr.rs/vnstat 1curl -sSLf &quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;vnstat=1&amp;alias=$ (hostname)&quot; | bash 指定 month rotate 为 7 号 1curl -sSLf &quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;vnstat=1&amp;vnstat-mr=7&amp;alias=$ (hostname)&quot; | bash 指定位置 &amp; 类型 (我一般用这个) 1curl -sSLf &quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;alias=$ (hostname)&amp;type=arm&amp;loc=home&quot; | bash 安装并将这台 vps 置顶显示 1curl -sSLf &quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;weight=10000&amp;alias=$ (hostname)&quot; | bash 自定义 ping 地址 1curl -sSLf &quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;alias=$ (hostname)&amp;cm=cm. Abc. Com: 80&quot; | bash 调试 12curl -sSLf &quot;https://ssr.rs/i?pass=pp&amp;gid=g1&amp;vnstat=0&amp;alias=$ (hostname)&quot; &gt; ssr-client-init. ShBash -x ssr-client-init. Sh ServerStatus 常用命令123456789101112131415# 启动systemctl start stat_serversystemctl start stat_client# 状态查看systemctl status stat_serversystemctl status stat_client# 使用以下命令开机自启systemctl enable stat_serversystemctl enable stat_client# 停止systemctl stop stat_serversystemctl stop stat_client Telegram 警告通知https://doc.ssr.rs/notification/ 123456789101112131415161718192021222324# https://core.telegram.org/bots/api# https://jinja.palletsprojects.com/en/3.0.x/templates/#if[tgbot]# 开关 true 打开Enabled = falsebot_token = &quot;&lt;tg bot token&gt;&quot;chat_id = &quot;&lt;chat id&gt;&quot;# host 可用字段参见 payload. Rs 文件 HostStat 结构, &#123;&#123;host.xxx&#125;&#125; 为占位变量# 例如 host. Name 可替换为 host. Alias，大家根据自己的喜好来编写通知消息# &#123;&#123;ip_info.query&#125;&#125; 主机 ip, &#123;&#123;sys_info.host_name&#125;&#125; 主机 hostnametitle = &quot;❗&lt;b&gt;Server Status&lt;/b&gt;&quot;online_tpl = &quot; &#123;&#123;config.title&#125;&#125; 😆 &#123;&#123;host.location&#125;&#125; &#123;&#123;host.name&#125;&#125; 主机恢复上线啦&quot;offline_tpl = &quot; &#123;&#123;config.title&#125;&#125; 😱 &#123;&#123;host.location&#125;&#125; &#123;&#123;host.name&#125;&#125; 主机已经掉线啦&quot;# Custom 模板置空则停用自定义告警，只保留上下线通知Custom_tpl = &quot;&quot;&quot;&#123;% if host. Memory_used / host. Memory_total &gt; 0.5 %&#125;&lt;pre&gt;😲 &#123;&#123;host.name&#125;&#125; 主机内存使用率超 50%, 当前 &#123;&#123; (100 * host.memory_used / host.memory_total) | round &#125;&#125; % &lt;/pre&gt;&#123;% endif %&#125;&#123;% if host. Hdd_used / host. Hdd_total &gt; 0.5 %&#125;&lt;pre&gt;😲 &#123;&#123;host.name&#125;&#125; 主机硬盘使用率超 50%, 当前 &#123;&#123; (100 * host.hdd_used / host.hdd_total) | round &#125;&#125; % &lt;/pre&gt;&#123;% endif %&#125;&quot;&quot;&quot;","tags":["VPS，监控"],"categories":["技术"]},{"title":"PicGo + uPic + Github 搭建免费图床","path":"/2023/05/20/PicGouPicGithub/","content":"介绍自从来到 xLog 就开始养成写博客的习惯，虽然 xLog 目前上传图片无限制也免费，但一直以来我使用的服务都养成了备份的习惯，也不怕跑路。对比了 Amazon S3 &amp; Cloudflare R2，感兴趣的可以看看 R2 vs S3，感觉 Cloudflare R2 性价比更高，还可以免费嫖 10 GB，但总怕背刺，我不考虑大陆 IP 访问问题，所以索性换成免费的 Github，要比稳定，谁能比过 Github？使用总之一句话：”有备无患”。 Github 图库新建仓库注册好 Github 帐号，新建仓库，仓库名记住。 新建 token1&#x2F;点击个人——“设置” 2&#x2F;左边最下面选择” &lt;&gt;Developer settings “ 3&#x2F;选择令牌 Tokens (classic)——Generate new token (classic) 4&#x2F;备注选填，一定勾选 repo 5&#x2F;复制好 token 以上，Github 图库仓库设置完成 PicGo下载 PicGo 项目 地址 PicGo Github https://github.com/Molunerfinn/PicGo PicGo 下载 https://github.com/Molunerfinn/PicGo/releases 设置 PicGo打开 PicGo 设置，选择 Github 后编辑右边的配置文件 填入第一步记下的仓库名（格式是 userame&#x2F;repo）和拷贝下来的 token，确定即可 uPic下载 uPic 项目 地址 uPic&nbsp; Github https://github.com/gee1k/uPic Homebrew brew install bigwig-club&#x2F;brew&#x2F;upic –cask Github Download https://github.com/gee1k/uPic/releases 配置 uPic在设置中选择图床，左下脚 + “Github” 用户名: Github 用户名。例如：我的 Github 主页 https://github.com/gee1k，我的用户名就是 gee1k 仓库名: 需要储存上传文件的仓库名称。例如：我的仓库地址为 https://github.com/gee1k/oss，仓库名称就是oss 分支: 分支名称，默认是master，如果是其他分支，就必须先创建好分支，才能上传 Token: Github 的个人访问令牌（Personal access tokens） 域名: 默认可不设置域名，会使用 Github 默认的访问地址。当你的仓库开启了 pages 功能，并配置好了自定义域名时，这里就可以使用你的自定义域名 —引用 https://blog.svend.cc/upic/tutorials/github/ 保存即可 jsDelivr 加速需要 jsdelivr CDN 加速访问请勾选👇 链接将会变成 1https://cdn.jsdelivr.net/gh/geekbb/oss_img@×*** TyporaTypora 的配置更为简单，只要你配置好 PicGo，在 Typora 设置里选择 PicGo. app 即可","tags":["Github","图床"],"categories":["技术"]},{"title":"个人搭梯过墙备忘录","path":"/2023/05/14/v2ray/","content":"搭梯过墙三步走一台 VPS 重装系统 (DD)[Linux 一键网络重装系统傻瓜版](https://www.939.me/1969.html)123wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/installNET/master/Install.sh&quot;chmod +x Install.sh./Install.sh 安装 Debian11 系统 -2-3 更新系统&一键安装 curl wget1apt update -y &amp;&amp; apt upgrade -y &amp;&amp; apt install -y curl wget sudo 安装 BBR 网络加速脚本[最新内核 BBR 脚本卸载内核版本](https://github.com/ylx2016/Linux-NetSpeed/)1wget -O tcp.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh 安装 BBR 原版内核 -1-11 安装 BBRplus 新版内核 -5-19 安装代理[VLESS (TCP_Vision、Reality、gRPC 八合一共存脚本](https://github.com/mack-a/v2ray-agent)1wget -P /root -N --no-check-certificate &quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh 八合一一键脚本，快速搭建教程 VLESS+TLS_Vision+TCP[推荐〕 VLESS+Realityt+uTLSt+Vision[推荐〕 2-1-07 多说无益","tags":["VPS","v2ray"],"categories":["技术"]},{"title":"两款平替 CleanMyMac 磁盘清理工具推荐","path":"/2023/05/06/CleanMyMac/","content":"无论您是想要替换 CleanMyMac，还是寻找一款免费的磁盘清理工具，这两款软件都是不错的选择。它们简单易用，功能强大，并且不会对您的系统造成任何负面影响。 mac-cleanup 名称 项目地址 mac-cleanup https://github.com/mac-cleanup/mac-cleanup-sh mac-cleanup-py https://github.com/mac-cleanup/mac-cleanup-py Mac-cleanup 有两个版本，一个是清理脚本 (已弃用)、一个是 mac-cleanup-py。我是一直用清理脚本，方便。但还是推荐大家用新版 mac-cleanup-py Pretty Clean 名称 项目地址 Pretty Clean https://www.prettyclean.cc/ 一款 Rust 编写 macOS 磁盘清理工具，界面简洁、直观、免费。几个核心的功能以满足普通用户与开发者用户的清理需求： 清理常规软件与系统软件的运行缓存与日志。 清理软件开发中使用的构建工具的运行缓存与日志。 清理软件开发中可通过源码重新获得的编译结果等。 简单易用，只扫描极少文件，最大程度保护用户隐私。 结语这两款软件都有着出色的功能和性能，能够帮助您轻松清理和优化您的 Mac 电脑，完全可以平替 一年十几刀的 CleanMyMac，让您的 Mac 保持干净、高效的状态。如果您有其他好的推荐或者任何问题，欢迎与我分享。","tags":["App"],"categories":["web"]},{"title":"王国之泪偷跑！关于游戏&模拟器的那些事","path":"/2023/05/03/NsEmuTools/","content":"前言本来塞尔达传说：王国之泪将于 5 月 12 日登陆 Switch，结果在 5 月 2 日就偷跑，并且模拟器可玩，这就有意思了！我来推荐几个珍藏的模拟器管理工具和游戏资源下载网站，PC 玩家可以玩起来了，低调~ 模拟器运行塞尔达传说：王国之泪，我使用的模拟器 [Ryujinx]，也叫龙神模拟器，实测目前是可以正常运行！（Radeon™ RX 580 24 帧）。 模拟器管理 模拟器管理必须力荐 NS-emu-toolsNs Emu Tools 简直是 PC 党的福音，和懒人包没有什么区别，支持 Yuzu &amp; Ryujinx 模拟器各种版本的安装&#x2F;更新，集成 Switch 固件版本安装，加上 keys 密钥和金手指管理，一条龙服务打破 PC 运行 Switch 游戏的技术壁垒，小白也能轻松入门。 游戏资源 有很多网站在提供 Switch 游戏资源，比如 Switch520 他们的网址经常变，所以这里我只推荐一个网站 NS 模拟器资源中转站，强烈推荐没玩过模拟器的朋友看看此网站里简易教程 简易教程 当然，如果你使用 NS-emu-tools ，上面的简易教程你只需要了解一下，因为 Ns Emu Tools 会直接带你上手！ 最后祝大家玩得开心🎊","tags":["游戏"],"categories":["web"]},{"title":"从 macOS 到 iPhone 全面拥抱 RIME 输入法","path":"/2023/04/29/RIME/","content":"中州韵输入法引擎是由佛振编写的开源中文输入法，目前项目网站、源代码均托管在 GitHub。基于同一个核心架构，该输入法分为三个官方发行版：Linux 发行版中州韵、Windows 发行版小狼毫、macOS 发行版鼠须管。— 维基百科 我的看法初始我是一名五笔输入法使用者，大约在 16 年接触到了中州韵输入法引擎，当时使用的是 Windows 发行版小狼毫。相比于搜狗输入法，这种输入法没有设置界面，全凭用户通过修改用户文件夹或程序文件夹里的 YAML 配置文件来客制化自己的输入法，在当时绝对是一股清流。后来，像大多数人一样，由于找不到各种功能的配置文件，入门即放弃。几年后，我断断续续地使用过，但总是感觉不得要领。 转机直到最近，我看到一篇博文《Rime Squirrel 鼠须管输入法配置详解》，通读过才算正真了解了 RIME 输入法，就是博主的这张图彻底解决了我找不到各种配置文件目录的问题，我真心建议想用好 RIME 输入法的朋友仔细看看这篇博文，你一定会从中得到很多收获。 随即磨拳擦掌再次开始安装使用 入门到资深macOS 安装 macOS 安装鼠须管，Windows 安装小狼毫 如果你是单独使用拼音&amp;五笔，大可用博文中的配置懒人包，覆盖自已配置即可，不必折腾 五笔拼音混输如果你是五笔拼音混输使用者，那你可以使用我的配置文件覆盖使用，修改如下： 1234567891011121314📝default.custom.yaml👇* 五笔拼音混输设置为默认方案* 候选词数量 10📝pinyin_simp.schema.yaml👇* 模糊音纠错全开 (南方人福音)📝squirrel.custom.yaml👇* 后选字改为竖排* 字体设置为霞鹜文楷 * 候选字大小设置为28(更适合4K屏幕)* 集成皮肤N套（首推微信键盘皮肤“深浅”色）📝installation.yaml👇* 同步至 iCloud （文件夹RimeSync）📝wubi86_jidian_pinyin.schema.yaml👇*四码上屏。四码唯一时，自动上屏(影响拼音组字) 同步 iCloud 请打开 installation.yaml 将倒数二行 geek 改为你的 Mac 管理员名称“&#x2F;Users&#x2F;geek&#x2F;Library&#x2F;Mobi……” 霞鹜文楷字体下载 https://github.com/lxgw/LxgwWenKai 皮肤效果 首选皮肤”微信键盘皮肤”，香不香！ 另外几套皮肤 (借用博主的图) 词库管理推荐 管理 #Rime #五笔 词库的工具，可添加、删除、批量导入外部词条、批量生成指定版本的五笔编码，支持 macOS Windows Ubuntu 多个平台 五笔码表助手 for Rime 可以看到，拼音词库是 65116，五笔词库是 89271，还不够造吗？，有了这个词库工具，自己造吧 这不比微信输入法强？顺嘴一提，为了您的隐私，真心不建议国内用户安装微信输入法。 iPhone 安装 项目 地址 仓输入法 https://github.com/imfuxiao/Hamster App Store https://apps.apple.com/cn/app/%E4%BB%93%E8%BE%93%E5%85%A5%E6%B3%95/id6446617683?itsct=apps_box_badge&amp;itscg=30200 仓输入法 经过几次迭代，已经很完备了，推荐使用。 iPhone 拼音方案 只推荐雾凇拼音，将雾凇拼音打包下载解压重命名为 Rime 输入方案上传 打开网页，将原来的 Rime 方案删除，上传雾凇拼音包，注意文件夹还是要命名为 Rime 选择雾凇拼音，然后重新部署即可。 切记不要打开配色方案，相信我，用自带的主题，又快又简洁！ 模糊音请修改 rime_ice.schema.yaml 文件 结语这篇文章适用于那些既会打五笔，但又忘记某些字根需要拼音辅助的朋友。希望这篇文章能对你们有所帮助， (没错，说的就是我！)","tags":["App 输入法"],"categories":["web"]},{"title":"看了三天抖音广告，终于把这套壁纸拔下来了","path":"/2023/04/27/Wallpaper/","content":"😍 这套手机壁纸太仙了，大爱！😂 看 50 秒广告下载一张图。谁懂啊，家人们。🎉 喜欢直接拿去，欢迎分享！ 效果图 壁纸下载 名称 项目地址 阿里云盘 https://www.aliyundrive.com/s/E3CTMocykXE","tags":["壁纸"],"categories":["web"]},{"title":"给外观党换一个极简终端 Alacritty + 美化","path":"/2023/04/26/Alacritty/","content":"简介 Alacritty 是一款 快速、跨平台的 OpenGL 终端仿真器，具有合理的默认设置，但允许进行广泛的配置。通过与其他应用程序集成，而不是重新实现它们的功能，它成功地提供了一组灵活的功能，并具有高性能。目前支持的平台包括 BSD、Linux、macOS 和 Windows。 名称 github 地址 Alacritty https://github.com/alacritty/alacritty Homebrew安装 brew install alacritty 美化效果Alacritty (窗口) Alacritty (图标) 美化字体&amp;图标 JetBrains Mono：面向开发人员的免费开源字体 名称 地址 jetbrains https://www.jetbrains.com/lp/mono/ 图标 点击下载 mac 端在应用文件夹中找到 Alacritty.app ，右键显示简介，然后将下载的 icns 文件拖动到左上角图标上，完成替换 配置文件1、在线更新在 Alacritty 运行下面的命令，重启即可。Alacritty 新版本现已改为 TOML 配置文件，需要转换成 TOML 格式 2、替换配置文件 替换 ~&#x2F;.config&#x2F;alacritty&#x2F;alacritty.yml 名称 地址 alacritty 点击下载 然后在 Alacritty 运行即可将YAML转换为 TOML 配置文件，重新生效。1alacritty migrate 3、或者直接用我转好的 TOML 配置文件 名称 地址 TOML 格式 点击下载","tags":["App"],"categories":["web"]},{"title":"用 Rust 命令行一键打包网页生成桌面 App","path":"/2023/04/23/Rustapp/","content":"名称 项目地址 Pake https://github.com/tw93/Pake 支持 Mac &#x2F; Windows &#x2F; Linux，关于 常用包下载、命令行一键打包、定制开发 可见下面文档，也欢迎去 讨论区 交流。 特征1234🎐 相比传统的 Electron 套壳打包，要小将近 20 倍，5M 上下。🚀 Pake 的底层使用的 Rust Tauri 框架，性能体验较 JS 框架要轻快不少，内存小很多。📦 不是单纯打包，实现了快捷键的透传、沉浸式的窗口、拖动、样式改写、去广告、产品的极简风格定制。👻 只是一个很简单的小玩具，用 Rust 替代之前套壳网页打包的老思路，其实 PWA 也很好。 打包 xLog 个人主页创建虚拟环境：1python3 -m venv myenv 激活虚拟环境：1source myenv/bin/activate 使用 npm 进行安装1npm install -g pake-cli 查找 Pake 安装路径1npm bin -g 编辑配置文件1nano ~/.bash_profile 添加 PATH 环境变量 在文件末尾添加以下行：(地址可能不一) 1export PATH=$PATH:/Users/geek/.npm-packages/bin 按下 Ctrl 键和 X 键，然后 Y，保存退出。 重新加载 Bash 配置文件1source ~/.bash_profile 生成桌面应用 就用我的 xLog 主页小试 (第一次运行很慢，后面就好了) 1pake https://x.geekbb.ml --name Geek --transparent *如遇见 rustc 错误请看最后 效果图GIF加载中…… 不过默认图标也是醉了，随便找一个 JPG 转 ICNS 网站 👉JPG 转 ICNS - 在线转换图像文件 (aconvert.com) MacOS 下必须为 .icns Windows 下必须为 .ico Linux 下必须为 .png 换默认图标后面加：--icon &lt;path&gt; 1pake https://x.geekbb.ml --name Geek --transparent --icon /Users/geek/Documents/123/Geek.icns 打包 Chatbot UI Chatbot UI 部署在本地，正好可以打包，免得每次输入网址 1pake http://192.168.2.100:3000 --name Chatbot --transparent --icon /Users/geek/Documents/123/chatgpt.icns 效果图GIF加载中…… 如果遇见 zsh: command not found: rustc 错误👇 打开终端并依次执行以下命令： 1curl --proto &#x27;=https&#x27; --tlsv 1.2 -sSf https://sh.rustup.rs | sh 打开终端，输入以下命令打开终端的配置文件： 1nano ~/.zshrc 在打开的文件末尾添加以下代码：1export PATH=&quot;$HOME/.cargo/bin:$PATH&quot; 这个命令将 $HOME/.cargo/bin 添加到 PATH 环境变量中。 按下 Control + X，然后按下 Y 保存更改并退出。 输入以下命令更新终端的配置文件： 1source ~/.zshrc","tags":["App"],"categories":["web"]},{"title":"本地部署免费的  GPT3.5 和 GPT4","path":"/2023/04/22/gpt4free/","content":"名称 项目地址 gpt 4 free https://github.com/xtekky/gpt4free 官方介绍 去中心化 AI 产业，通过几个反向工程的 API（poe.com、phind.com、chat.openai.com 等）提供免费的 GPT-4&#x2F;3.5 脚本。 在线访问https://chat.chatbot.sex/chat 包括 gpt-4、网络访问和类似于 gpt-jailbreak 的 DAN 模型 本地部署下载代码包打开 xtekky&#x2F;chatgpt-clone 下载压缩包并解压 创建虚拟环境首先，打开终端，进入上面解压包所在文件夹，运行下面命令 1python3 -m venv myenv 激活虚拟环境1source myenv/bin/activate 更新 pip 如果提示要更新 1pip install --upgrade pip 安装 flask(需富强) 1pip install flask 安装 requests(需富强) 1pip install requests 运行脚本1python3 run.py 打开 http://127.0.0.1:1337(需富强) 请且用且珍惜…… 4 月 23 日更新：已撸坏，再观察吧…… 安装 python3您可以尝试重新安装 pip 3 以确保它已正确安装。在终端中输入以下命令以卸载旧版本的 pip 3： 1sudo apt-get remove python3-pip 然后使用以下命令安装最新版本的 pip 3： 12sudo apt-get updatesudo apt-get install python3-pip 如果 pip 3 已成功安装，您可以通过输入以下命令来验证它： 1pip3 --version 如果您仍然无法找到 pip 3，请尝试使用以下命令手动安装它： 12sudo apt-get install python3-setuptoolssudo easy_install3 pip 将手动安装 pip 3 并将其添加到系统路径中。您现在应该能够在终端中使用 pip 3 命令了。 打开终端并输入以下命令： 1Which pip 3 这将输出 pip 的安装路径，例如： 1/usr/local/bin/pip 3 将 pip 的安装路径添加到系统的环境变量中。您可以通过编辑您的 bashrc 文件来实现这一点。在终端中输入以下命令： 1Echo &#x27;export PATH=&quot;/path/to/python/bin:$PATH&quot;&#x27; &gt;&gt; ~/. Bashrc 注意，你需要将上述命令中的“&#x2F;path&#x2F;to&#x2F;python&#x2F;bin”替换为 Python 的实际安装路径。 重新加载 bashrc 文件以使更改生效： 1Source ~/. Bashrc","tags":["ChatGPT"],"categories":["AI"]},{"title":"为 Obsidian 推荐几款好看的字体","path":"/2023/04/21/ObsidianTypeface/","content":"序言近日为 Obsidian 笔记软件所倾倒。吾于 Twitter 曰，Notion 愈益沉重，加以笔记存于云，常觉不安。是以初探 Obsidian。今人皆以貌取人，故必先修饰门面，方心怡记笔记。余于学习中多措字体，后得所满意者，与诸君共享之。 Obsidian 效果图 字体下载 名称 &nbsp;地址 霞鹜文楷 https://github.com/lxgw/LxgwWenKai 思源黑体 UserStyles 用户样式 (n2o.io) 阿里巴巴普惠体 2.0 阿里巴巴普惠体 (alibabagroup.com) 阿里巴巴普惠体 2.0 我使用的是 AlibabaPuHuiTi-2-65-Medium Obsidian 设置 Youtube 字幕设置下载浏览器扩展 名称 地址 YouTube™ 双字幕 https://www.dual-subtitles.com/ Youtube 效果图 希望大家喜欢！","categories":["web"]},{"title":"小白如何安装 Docker&Compose","path":"/2023/04/20/DockerCompose/","content":"安装 Docker Debian为例 更新软件包、安装 wget 和 vim 工具1apt-get update &amp;&amp; apt-get install -y wget vim 下载并安装 Docker12wget -qO- get.docker.com | bash 显示 Docker 版本1docker -v 设置开机启动1systemctl enable docker 安装 Docker-Compose 更新包列表1sudo apt update 安装 Docker Compose 依赖1sudo apt install curl 下载 Docker Compose1sudo curl -L &quot;https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose 添加执行权限1sudo chmod +x /usr/local/bin/docker-compose 验证安装1docker-compose --version 如果成功安装，将显示 Docker Compose 的版本信息。 卸载 Docker 1Sudo apt-get purge docker-ce docker-ce-cli containerd. Io 12Sudo rm -rf /var/lib/dockerSudo rm -rf /var/lib/containerd Docker 常用命令 命令 描述 docker run 运行一个容器 docker build 构建一个镜像 docker pull 拉取一个镜像 docker push 推送一个镜像到仓库 docker images 列出本地所有的镜像 docker ps 列出正在运行的容器 docker stop 停止一个或多个容器 docker rm 删除一个或多个容器 docker rmi 删除一个或多个镜像 docker exec 在容器中执行命令 docker stop $(docker ps -a -q) 停止所有容器 docker rm $(docker ps -a -q) 删除所有容器 docker image prune -a 删除未使用的镜像 docker volume prune 删除未使用的卷 docker network prune 删除未使用的网络 docker system prune 删除停止的容器、未使用的镜像、卷和网络 docker rmi $(docker images -f &quot;dangling=true&quot; -q) 清理无标签的镜像 docker container prune 清理停止的容器 docker system prune -a --volumes 清理不再使用的数据 docker image prune -a -f 强制清理","tags":["Docker"],"categories":["技术"]},{"title":"Amazing-QR 只需四步制作一个炫酷二维码","path":"/2023/04/18/AmazingQR/","content":"标题 项目地址 Amazing-QR https://github.com/x-hw/amazing-qr Amazing QR，是一款开源的 Python 应用程序，用于生成炫酷的二维码图像和动态 GIF 图片 可生成普通二维码、带图片的艺术二维码（黑白与彩色）、动态二维码（黑白与彩色） 安装生成普通 QR 码使用虚拟环境 (推荐) 在虚拟环境中安装并运行 amzqr，可以确保使用的是正确的 Python 解释器和模块安装路径。 首先，打开终端，创建一个新的虚拟环境： 1python3 -m venv myenv 激活虚拟环境：1source myenv/bin/activate 使用 pip 安装 amzqr1pip install amzqr 命令运行 amzqr1amzqr https://github.com 🎉完成！ /Users/geek/qrcode.png 成生艺术二维码黑白图片 参数-p 用来将 QR 二维码图像与一张同目录下的图片相结合，产生一张黑白图片。我是将头像放入 qr 文件夹 1amzqr https://x.geekbb.ml -p /Users/geek/qr/qr.jpg 彩色图片 加上参数 -c 可以使产生的图片由黑白变为彩色的。 1amzqr https://x.geekbb.ml -p /Users/geek/qr/qr.jpg -c -con 1.5 -bri 1.6 参数-con 用以调节图片的对比度，1.0 表示原始图片，更小的值表示更低对比度，更大反之。默认为 1.0。 参数 -bri 用来调节图片的亮度，其余用法和取值与 -con 相同。 GIF 图片1amzqr https://x.geekbb.ml -p /Users/geek/qr/qr.gif -c -con 1.5 -bri 1.6","tags":["二维码"],"categories":["技术"]},{"title":"Siri 接入 ChatGPT 之捷径","path":"/2023/04/17/SiriChatGPT/","content":"ChatGPT 之 Siri 捷径道甚为广传，常之甚烂大街而已，余在此惟推一款、自用最實、最简洁，期眾皆喜之！ 名称 地址 Hey GPT https://www.icloud.com/shortcuts/8bcc2979d6e34a3d90a48c3f77f96d68 来源 https://twitter.com/mckaywrigley/status/1640414764852711425 &gt; 打开相机扫一扫，添加 Hey GPT 捷径 此 Siri 捷径是由Mckay Wrigley制作 他为此录了一个视频https://twitter.com/i/status/1640414764852711425 当然，我还是喜欢通过呼出 Hey Siri 然后说 Hey GPT 来调用，效率高了不少 进入捷径，将朗读改为你想要的名字","tags":["ChatGPT"],"categories":["AI"]},{"title":"快速获取 SSL 泛二级域名证书-acme.sh","path":"/2023/04/15/sslacme/","content":"使用工具 名称 地址 acme.sh https://github.com/acmesh-official/acme.sh Cloudflare https://www.cloudflare.com/zh-cn/ 注意事项以下操作都是基于将域名的 NS 记录改成 Cloudlflare 的 NS，并由 Cloudflare 托管。 手动 DNS 验证方式 一、安装 acme.sh普打开 SSH 输入以下命令安装 acme.sh（注：最后Email地址改成你注册 Cloudflare 的邮箱） 1curl https://get.acme.sh | sh -s email=my@example.com 二、运行脚本手动验证 DNS就以我 198406.xyz 来申请泛二级域名 (*.198406.xyz)SSL 证书，下面代码改成你自己的域名。 1acme.sh --issue --dns -d &quot;*.198406.xyz&quot; --yes-I-know-dns-manual-mode-enough-go-ahead-please 记录上面的 Domain 和 TXT value 的所有值（黄色字体部分） 三、Cloudflare 添加 TXT 解析在 Cloudflare 管理域名添加 TXT 解析 等待 1 min 生效后 四、运行申请脚本（记得改成你自己的域名） 1acme.sh --renew --dns -d &quot;*.198406.xyz&quot; --yes-I-know-dns-manual-mode-enough-go-ahead-please 成功申请到*.198406.xyz 泛二级域名证书 五、域名证书安全处理将 pem 域名文件保存到/root/cert/(改域名，文件目录要先建好) 1234acme.sh --install-cert -d &quot;*.198406.xyz&quot; \\ --key-file /root/cert/key.pem \\--fullchain-file /root/cert/cert.pem \\--reloadcmd &quot;service nginx force-reload&quot; 搞定","tags":["域名证书","SSL"],"categories":["技术"]},{"title":"小白如何把 Chatbot UI 部署在本地","path":"/2023/04/14/ChatbotUI/","content":"余所介紹之Chatbot UI昔日已有所涉及，今乃吾之 ChatGPT 網頁端之主力也。吾素用 Github 之專案主頁所薦之一鍵部署於 Vercel，然近日 Vercel，或有日益眾多之使用者，令頁面載入漸見遲緩，影響體驗。欲观其能否部署於己之 VPS 或本地，故特記錄吾之部署過程。 名称 地址 Chatbot UI https://github.com/mckaywrigley/chatbot-ui VPS 部署 (未完) 首先我按照项目说明在 VPS 安装好各类依赖和环境，运行 1docker build -t chatgpt-ui . 然后整个世界安静了，为我的小白行径自罚一杯 *待我搞台更强悍的 VPS?😅 本地部署 名称 配置 Mac OS Ventura 13.3.1 Docker version 23.0.3 打开终端 自行 ChatGPT 安装好 Docker，我的 Docker 项目都是放在”文稿”文件夹里，即:&#x2F;Users&#x2F;geek&#x2F;Documents&#x2F;docker 终端进入 docker 文件夹1cd /Users/geek/Documents/docker 克隆 chatbot-ui 项目到本地1git clone https://github.com/mckaywrigley/chatbot-ui.git 进入 chatbot-ui 文件夹1cd chatbot-ui 执行以下命令构建 Docker 镜像：1docker build -t chatbot-ui . 构建成功会出现如下提示：*如果失败就问 ChatGPT😂 &#x3D;&gt; [production 8&#x2F;8] COPY –from&#x3D;build &#x2F;app&#x2F;next-i18next.config.js .&#x2F;next 0.0s &#x3D;&gt; exporting to image 10.3s &#x3D;&gt; &#x3D;&gt; exporting layers 10.3s &#x3D;&gt; &#x3D;&gt; writing image sha256:bdc155462ef83c399e49a925fab840.0s &#x3D;&gt; &#x3D;&gt; naming to docker.io&#x2F;library&#x2F;chatbot-ui 运行 Docker 将 xxxxxxxx 替换为你的 OpenAI API 1docker run -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatbot-ui 要将 docker 容器从前台模式更改为后台模式，请使用以下命令： 1docker run -d -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatbot-ui 在此命令中，我们添加了一个 -d 标志，它表示分离模式。这将使 Docker 容器在后台运行，而不是前台运行。 另外，如果您需要给容器命名，可以使用 –name 标志指定一个名称，例如： 1docker run -d --name my-container -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatbot-ui 这将为容器命名为 my-container。 打开浏览器 (搞定)🎉1http://127.0.0.1:3000/ 注：我用的是软路由白名单上网，国内环境使用，还请自行研究chatgptProxyAPI","tags":["ChatGPT","Docker"],"categories":["AI"]},{"title":"Github 近期热门 ChatGPT 介绍及特点 (第二期)","path":"/2023/04/13/ChatGPTapp2/","content":"盖此篇文所言，论当前热门之 Github ChatGPT 开源项目。详加介绍使人能够于短暂光阴內基本掌握其核心体系，藉此提升自身之選擇能力。 Writely 让 Notion AI 的力量无处不在！ 1234567它能为您做什么📧 写邮件📺 浏览推特、微博等社交媒体平台，回复网友😯在知乎上写故事...🔥 基于Open AI GPT模型，带来全新的智能书写体验。✍️ 支持互联网任意编辑网页的写作助手，有效提高用户写作效率和质量。📖 产品可以进行查询翻译和辅助阅读，大大减少用户的阅读时间，提高理解力。 点评:Notion AI 平替，近期更新了”支持导出自定义指令”,部分功能和ChatGPT Box重合，ChatGPT Box 的作者也要增加“插件系统”了，卷到飞起！向你们致敬！运行界面 | Github 链接：Writely | ChatGPT ChatGPT 桌面应用程序（Mac、Windows 和 Linux） 1234567891011多平台：macOS Linux Windows文本转语音导出 ChatGPT 历史记录（PNG、PDF 和 Markdown）主窗口和系统托盘支持自定义 URL，可将任何网站包装到桌面应用程序中自动应用程序升级通知常用快捷键系统托盘悬停窗口强大的菜单项支持斜杠命令及其配置（可以手动配置或从文件 #55 同步)自定义全局快捷方式 （#108)弹出搜索（#122 鼠标选择内容，不超过 400 个字符）：该应用程序是使用 Tauri 构建的，由于其安全限制，某些操作按钮将不起作用，因此我们建议您转到您的浏览器。 点评：不需要 API，登录 ChatGPT 帐号就可以使用 (自行判断违规风险),对于我来说，省钱就是王道。作者开了新坑NoFWL，也可多作了解 运行界面 | Github 链接：ChatGPT | OpenAl Translator 不仅仅是翻译的翻译器 - 由 OpenAI 提供支持。 12345678支持三种翻译模式：翻译、润色、总结支持 55 种语言的相互翻译、润色和总结功能支持实时翻译、润色和总结，以最快的速度响应用户，让翻译、润色和总结的过程达到前所未有的流畅和顺滑支持自定义翻译文本支持一键复制支持 TTS有桌面端应用，全平台（Windows + macOS + Linux）支持！同时支持 OpenAI 和 Azure OpenAI Service 点评：终结 Bob 的明星产品，光芒四射，无需过多介绍！ 运行界面 | Github 链接：OpenAl Translator | ChatHub ChatHub 是款全能聊天机器人客户端 1234567891011🤖 在一个应用中使用不同的聊天机器人，目前支持 ChatGPT、新的 Bing Chat 和 Google Bard，未来将集成更多机器人💬 同时与多个聊天机器人聊天，方便比较它们的答案🚀 支持 ChatGPT API 模式，比 ChatGPT Plus 更快、更省成本📊 在使用 ChatGPT API 模式时，可以查看令牌使用统计信息🔍 快捷方式，可以快速在浏览器中的任何位置激活应用程序🎨 支持 Markdown 和代码高亮显示📚 自定义提示和社区提示的 Prompt 库💾 本地保存对话历史记录📥 导入和导出所有数据🔗 将对话分享为 Markdown🌙 暗黑模式 点评：浏览器扩展中的明星产品，AI 瑞士军刀，各家产品对比神器运行界面 | Github 链接：ChatHub | MacGPT Mac 和菜单栏上的 ChatGPT 1234使用全局功能，您可以在任何地方使用Mac访问ChatGPT。只需激活弹出在屏幕中间的全局文本字段，就可以开始与ChatGPT聊天。只需输入您的触发短语和提示，ChatGPT直接带入您的文本字段中，使用MacGPT Inline。迅速从您的菜单栏、网站或API本地访问chatGPT。访问ChatGPT网站原生应用或者从菜单栏进行访问，无需支付任何额外费用！ 点评：目前使用主力，特色功能多，高度融合 Mac OS，极致好用 | 官网：ChatHub |","tags":["ChatGPT"],"categories":["AI"]},{"title":"Github 近期热门 ChatGPT 介绍及特点 (第一期)","path":"/2023/04/11/ChatGPTapp1/","content":"盖此篇文所言，论当前热门之 Github ChatGPT 开源项目。详加介绍使人能够于短暂光阴內基本掌握其核心体系，藉此提升自身之選擇能力。 Chatbot-ui chatbot-ui 是一个聊天机器人 UI 也是一个高级聊天机器人工具包，可部署在 Vercel，用于在 Chatbot UI Lite 上构建 OpenAI 的聊天模型，使用 Next.js，TypeScript 和 Tailwind CSS。 1234567891011121314151617主要功能：提示模板（3/27/23）重新生成和编辑响应（3/25/23）文件夹（3/24/23）搜索聊天内容（3/23/23）停止消息生成（3/22/23）导入/导出聊天记录（3/22/23）自定义系统提示（3/21/23）错误处理（3/20/23）GPT-4支持（需要访问）（3/20/23）搜索对话（3/19/23）代码语法高亮（3/18/23）切换侧边栏（3/18/23）对话命名（3/18/23）Github风格的标记（3/18/23）在应用中添加OpenAI API密钥（3/18/23）Markdown支持（3/17/23） 点评：开源 ChatGPT 用户界面，近期更新的右侧自定义提示支持变量，配合“ChatGPT 自用 Prompt 区别于网络上大多数烂套路”食用，极大提升我的效率，支持导出话题记录和自定义 Prompt，目前是我的主力。运行界面 Github 链接：Chatbot-ui Chatbox 开源的 ChatGPT API (OpenAI API) 桌面客户端，Prompt 的调试与管理工具，支持 Windows、Mac 和 Linux 123456789和 ChatGPT Plus 一样快数据存储在本地，不会丢失更自由、更强大的 Prompt 能力支持 GPT-4 和其他模型支持自定义域名代理更多功能：Markdown、消息引用、字数与token估算、夜间模式……符合人体工程学的 UI 设计提供安装包，无需部署免费，开源 点评：快是真快，期待加入自定义 Prompt。运行界面 Github 链接：Chatboxi ChatGPT Box 将 ChatGPT 深度集成到浏览器中，你所需要的一切均在于此 12345678910111213141516🌈 在任何页面随时呼出聊天对话框 (Ctrl+B)📱 支持手机等移动设备📓 通过右键菜单总结任意页面 (Alt+B)📖 独立对话页面 (Ctrl+Shift+H)🔗 多种API支持 (免费用户和Plus用户可用Web API, 此外还有GPT-3.5, GPT-4, NewBing, 自托管支持, Azure等)📦 对各种常用网站的集成适配 (Reddit, Quora, YouTube, GitHub, GitLab, StackOverflow, Zhihu, Bilibili) (受到wimdenherder启发)🔍 对所有主流搜索引擎的适配, 并支持自定义查询以支持额外的站点🧰 框选工具与右键菜单, 执行各种你的需求, 如翻译, 总结, 润色, 情感分析, 段落划分, 代码解释, 问询🗂️ 静态卡片支持浮出聊天框, 进行多分支对话🖨️ 随意保存你的完整对话记录, 或进行局部复制🎨 强大的渲染支持, 不论是代码高亮, 还是复杂数学公式🌍 多语言偏好支持📝 自定义API地址支持⚙️ 所有站点适配与工具均可自由开关, 随时停用你不需要的模块💡 工具与站点适配开发易于扩展, 对于开发人员易于自定义, 请查看开发&amp;贡献部分😉 此外, 如果回答有任何不足, 直接聊天解决! 点评：此神软可代替 chathub，writely，BingGPT，openai-translator！我愿称最强！运行界面 Github 链接：ChatGPT Box BingGPT 新必应人工智能聊天的桌面应用程序 12345与新的必应聊天，无需安装 Microsoft Edge 或浏览器插件将完整对话导出为 Markdown、PNG 或 PDF自定义外观（主题和字体大小）键盘快捷键多平台 点评：反映比 Edge 自带的快，并且稳如老狗运行界面 Github 链接：BingGPT ChatGPT Web 支持双模型，提供了两种非官方 ChatGPT API 方法 12345678[✓] 双模型[✓] 多会话储存和上下文逻辑[✓] 对代码等消息类型的格式化美化处理[✓] 访问权限控制[✓] 数据导入、导出[✓] 保存消息到本地图片[✓] 界面多语言[✓] 界面主题 点评：部署在 docker 超方便，接入我国内亲朋使用 Github 链接：Chatgpt-web","tags":["ChatGPT"],"categories":["AI"]},{"title":"分享 ChatGPT 自用 Prompt 区别于网络上大多数烂套路","path":"/2023/04/10/Prompt1/","content":"吾自己所用之 Prompt，与今世之甚多俗套有区别，实乃倾尽心思所编，愿其能助大家于事业成就之路（章法不一，而定期有更新） 单词查询 {英语单词查询解释} 123456789101112请对Text以表格返回：项目|结果翻译成英文国际音标词性词形中文解释词根词缀例句1(英-中)例句2例句3Text: &quot;&quot;&quot;&#123;&#123;&#125;&#125;&quot;&quot;&quot; 英文例句 {查询中&#x2F;英词汇，返回 3 个例句附中文} 1234567请对Text以表格返回：项目|结果英文例句1(英-中)例句2(英-中)例句3(英-中)Text: &quot;&quot;&quot;&#123;&#123;&#125;&#125;&quot;&quot;&quot; 汉字查询 {查询汉字的拼音组词解释} 1234567请对Text以表格返回：项目|结果拼音组词汉字解释例句Text: &quot;&quot;&quot;&#123;&#123;&#125;&#125;&quot;&quot;&quot; 中英互译 {自动翻译目标语言} 12translates EN/CN,answer only.Text:&quot;&quot;&quot;&#123;&#123;&#125;&#125;&quot;&quot;&quot; 古文解释 {自动翻译目标语言} 123456请对Text以表格返回：项目|结果拼音现代解释例句Text: &quot;&quot;&quot;&#123;&#123;&#125;&#125;&quot;&quot;&quot; 语言优化 {用简洁的语言整理这一段话，增加逻辑性，去掉错别字} 12请改进Text的拼写、语法、清晰、简洁和整体可读性，同时分解长句，减少重复。只返回更正版本，避免解释。Text:&quot;&quot;&quot;&#123;&#123;&#125;&#125;&quot;&quot;&quot; Excel 函数生成器 {根据描述生成函数} 12345将Text指令返回指定的excel函数：项目|结果Excel函数精简描述Text:&quot;&quot;&quot;&#123;&#123;&#125;&#125;&quot;&quot;&quot; 生成标题 {复制&#x2F;粘贴您的页面内容并询问}[配合 Chatbot-ui使用，实现多变量 Prompt] 生成&#123;&#123;生成几个&#125;&#125;个独特的标题标签，最多 60 个字符，用于Text。它们应该描述性并包含术语&quot;&#123;&#123;包含术语&#125;&#125;&quot;： Text:&quot;&quot;&quot;&#123;&#123;内容&#125;&#125;&quot;&quot;&quot;","tags":["ChatGPT","Prompt"],"categories":["AI"]}]